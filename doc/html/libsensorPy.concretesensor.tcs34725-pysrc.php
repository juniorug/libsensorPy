
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
          "DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>libsensorPy.concretesensor.tcs34725</title>
  <link rel="stylesheet" href="<?=$siteUrl?>/css/epydoc.css" type="text/css" />
  <script type="text/javascript" src"<?=$siteUrl?>/js/epydoc.js"></script>
</head>

<body bgcolor="white" text="black" link="blue" vlink="#204080"
      alink="#204080">
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">
  <!-- Home link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="libsensorPy-module.php">Home</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.php">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.php">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.php">Help</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Project homepage -->
      <th class="navbar" align="right" width="100%">
        <table border="0" cellpadding="0" cellspacing="0">
          <tr><th class="navbar" align="center"
            >libsensorPy</th>
          </tr></table></th>
  </tr>
</table>
<table width="100%" cellpadding="0" cellspacing="0">
  <tr valign="top">
    <td width="100%">
      <span class="breadcrumbs">
        <a href="libsensorPy-module.php">Package&nbsp;libsensorPy</a> ::
        <a href="libsensorPy.concretesensor-module.php">Package&nbsp;concretesensor</a> ::
        Module&nbsp;tcs34725
      </span>
    </td>
    <td>
      <table cellpadding="0" cellspacing="0">
        <!-- hide/show private -->
        <tr><td align="right"><span class="options">[<a href="javascript:void(0);" class="privatelink"
    onclick="toggle_private();">hide&nbsp;private</a>]</span></td></tr>
        <tr><td align="right"><span class="options"
            >[<a href="frames.php" target="_top">frames</a
            >]&nbsp;|&nbsp;<a href="libsensorPy.concretesensor.tcs34725-pysrc.php"
            target="_top">no&nbsp;frames</a>]</span></td></tr>
      </table>
    </td>
  </tr>
</table>
<h1 class="epydoc">Source Code for <a href="libsensorPy.concretesensor.tcs34725-module.php">Module libsensorPy.concretesensor.tcs34725</a></h1>
<pre class="py-src">
<a name="L1"></a><tt class="py-lineno">  1</tt>  <tt class="py-line"><tt class="py-docstring">'''</tt> </tt>
<a name="L2"></a><tt class="py-lineno">  2</tt>  <tt class="py-line"><tt class="py-docstring">Created on 17/03/2015</tt> </tt>
<a name="L3"></a><tt class="py-lineno">  3</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L4"></a><tt class="py-lineno">  4</tt>  <tt class="py-line"><tt class="py-docstring">@author: Junior Mascarenhas</tt> </tt>
<a name="L5"></a><tt class="py-lineno">  5</tt>  <tt class="py-line"><tt class="py-docstring">based on earlyer version from</tt> </tt>
<a name="L6"></a><tt class="py-lineno">  6</tt>  <tt class="py-line"><tt class="py-docstring">the one written by Limor Fried, Kevin Townsend and Mikey Sklar</tt> </tt>
<a name="L7"></a><tt class="py-lineno">  7</tt>  <tt class="py-line"><tt class="py-docstring">SEE License_Adafruit.txt included in this package</tt> </tt>
<a name="L8"></a><tt class="py-lineno">  8</tt>  <tt class="py-line"><tt class="py-docstring">'''</tt> </tt>
<a name="L9"></a><tt class="py-lineno">  9</tt>  <tt class="py-line"> </tt>
<a name="L10"></a><tt class="py-lineno"> 10</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">time</tt> </tt>
<a name="L11"></a><tt class="py-lineno"> 11</tt>  <tt class="py-line"><tt class="py-keyword">from</tt> <tt id="link-0" class="py-name" targets="Package libsensorPy.utils=libsensorPy.utils-module.php"><a title="libsensorPy.utils" class="py-name" href="#" onclick="return doclink('link-0', 'utils', 'link-0');">utils</a></tt><tt class="py-op">.</tt><tt id="link-1" class="py-name" targets="Module libsensorPy.utils.pycomms=libsensorPy.utils.pycomms-module.php"><a title="libsensorPy.utils.pycomms" class="py-name" href="#" onclick="return doclink('link-1', 'pycomms', 'link-1');">pycomms</a></tt> <tt class="py-keyword">import</tt> <tt id="link-2" class="py-name" targets="Class libsensorPy.utils.pycomms.PyComms=libsensorPy.utils.pycomms.PyComms-class.php"><a title="libsensorPy.utils.pycomms.PyComms" class="py-name" href="#" onclick="return doclink('link-2', 'PyComms', 'link-2');">PyComms</a></tt> </tt>
<a name="L12"></a><tt class="py-lineno"> 12</tt>  <tt class="py-line"><tt class="py-keyword">from</tt> <tt id="link-3" class="py-name" targets="Package libsensorPy.abstractclass=libsensorPy.abstractclass-module.php"><a title="libsensorPy.abstractclass" class="py-name" href="#" onclick="return doclink('link-3', 'abstractclass', 'link-3');">abstractclass</a></tt><tt class="py-op">.</tt><tt id="link-4" class="py-name" targets="Module libsensorPy.abstractclass.lightSensor=libsensorPy.abstractclass.lightSensor-module.php"><a title="libsensorPy.abstractclass.lightSensor" class="py-name" href="#" onclick="return doclink('link-4', 'lightSensor', 'link-4');">lightSensor</a></tt> <tt class="py-keyword">import</tt> <tt id="link-5" class="py-name" targets="Class libsensorPy.abstractclass.lightSensor.LightSensor=libsensorPy.abstractclass.lightSensor.LightSensor-class.php"><a title="libsensorPy.abstractclass.lightSensor.LightSensor" class="py-name" href="#" onclick="return doclink('link-5', 'LightSensor', 'link-5');">LightSensor</a></tt> </tt>
<a name="L13"></a><tt class="py-lineno"> 13</tt>  <tt class="py-line"> </tt>
<a name="TCS34725"></a><div id="TCS34725-def"><a name="L14"></a><tt class="py-lineno"> 14</tt> <a class="py-toggle" href="#" id="TCS34725-toggle" onclick="return toggle('TCS34725');">-</a><tt class="py-line"><tt class="py-keyword">class</tt> <a class="py-def-name" href="libsensorPy.concretesensor.tcs34725.TCS34725-class.php">TCS34725</a><tt class="py-op">(</tt><tt class="py-base-class">LightSensor</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="TCS34725-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="TCS34725-expanded"><a name="L15"></a><tt class="py-lineno"> 15</tt>  <tt class="py-line">    <tt class="py-docstring">'''</tt> </tt>
<a name="L16"></a><tt class="py-lineno"> 16</tt>  <tt class="py-line"><tt class="py-docstring">    classdocs</tt> </tt>
<a name="L17"></a><tt class="py-lineno"> 17</tt>  <tt class="py-line"><tt class="py-docstring">    '''</tt> </tt>
<a name="L18"></a><tt class="py-lineno"> 18</tt>  <tt class="py-line"> </tt>
<a name="L19"></a><tt class="py-lineno"> 19</tt>  <tt class="py-line">    <tt id="link-6" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__ADDRESS=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__ADDRESS"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__ADDRESS" class="py-name" href="#" onclick="return doclink('link-6', '__ADDRESS', 'link-6');">__ADDRESS</a></tt><tt class="py-op">=</tt> <tt class="py-number">0x29</tt> </tt>
<a name="L20"></a><tt class="py-lineno"> 20</tt>  <tt class="py-line">    <tt id="link-7" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__COMMAND_BIT=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__COMMAND_BIT"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__COMMAND_BIT" class="py-name" href="#" onclick="return doclink('link-7', '__COMMAND_BIT', 'link-7');">__COMMAND_BIT</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x80</tt> </tt>
<a name="L21"></a><tt class="py-lineno"> 21</tt>  <tt class="py-line">    <tt id="link-8" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__ENABLE=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__ENABLE"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__ENABLE" class="py-name" href="#" onclick="return doclink('link-8', '__ENABLE', 'link-8');">__ENABLE</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x00</tt> </tt>
<a name="L22"></a><tt class="py-lineno"> 22</tt>  <tt class="py-line">    <tt id="link-9" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__ENABLE_AIEN=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__ENABLE_AIEN"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__ENABLE_AIEN" class="py-name" href="#" onclick="return doclink('link-9', '__ENABLE_AIEN', 'link-9');">__ENABLE_AIEN</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x10</tt> <tt class="py-comment"># RGBC Interrupt Enable</tt> </tt>
<a name="L23"></a><tt class="py-lineno"> 23</tt>  <tt class="py-line">    <tt id="link-10" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__ENABLE_WEN=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__ENABLE_WEN"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__ENABLE_WEN" class="py-name" href="#" onclick="return doclink('link-10', '__ENABLE_WEN', 'link-10');">__ENABLE_WEN</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x08</tt> <tt class="py-comment"># Wait enable - Writing 1 activates the wait timer</tt> </tt>
<a name="L24"></a><tt class="py-lineno"> 24</tt>  <tt class="py-line">    <tt id="link-11" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__ENABLE_AEN=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__ENABLE_AEN"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__ENABLE_AEN" class="py-name" href="#" onclick="return doclink('link-11', '__ENABLE_AEN', 'link-11');">__ENABLE_AEN</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x02</tt> <tt class="py-comment"># RGBC Enable - Writing 1 actives the ADC, 0 disables it</tt> </tt>
<a name="L25"></a><tt class="py-lineno"> 25</tt>  <tt class="py-line">    <tt id="link-12" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__ENABLE_PON=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__ENABLE_PON"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__ENABLE_PON" class="py-name" href="#" onclick="return doclink('link-12', '__ENABLE_PON', 'link-12');">__ENABLE_PON</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x01</tt> <tt class="py-comment"># Power on - Writing 1 activates the internal oscillator, 0 disables it</tt> </tt>
<a name="L26"></a><tt class="py-lineno"> 26</tt>  <tt class="py-line">    <tt id="link-13" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__ATIME=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__ATIME"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__ATIME" class="py-name" href="#" onclick="return doclink('link-13', '__ATIME', 'link-13');">__ATIME</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x01</tt> <tt class="py-comment"># Integration time</tt> </tt>
<a name="L27"></a><tt class="py-lineno"> 27</tt>  <tt class="py-line">    <tt id="link-14" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__WTIME=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__WTIME"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__WTIME" class="py-name" href="#" onclick="return doclink('link-14', '__WTIME', 'link-14');">__WTIME</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x03</tt> <tt class="py-comment"># Wait time (if ENABLE_WEN is asserted)</tt> </tt>
<a name="L28"></a><tt class="py-lineno"> 28</tt>  <tt class="py-line">    <tt id="link-15" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__WTIME_2_4MS=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__WTIME_2_4MS"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__WTIME_2_4MS" class="py-name" href="#" onclick="return doclink('link-15', '__WTIME_2_4MS', 'link-15');">__WTIME_2_4MS</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0xFF</tt> <tt class="py-comment"># WLONG0 = 2.4ms   WLONG1 = 0.029s</tt> </tt>
<a name="L29"></a><tt class="py-lineno"> 29</tt>  <tt class="py-line">    <tt id="link-16" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__WTIME_204MS=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__WTIME_204MS"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__WTIME_204MS" class="py-name" href="#" onclick="return doclink('link-16', '__WTIME_204MS', 'link-16');">__WTIME_204MS</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0xAB</tt> <tt class="py-comment"># WLONG0 = 204ms   WLONG1 = 2.45s</tt> </tt>
<a name="L30"></a><tt class="py-lineno"> 30</tt>  <tt class="py-line">    <tt id="link-17" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__WTIME_614MS=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__WTIME_614MS"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__WTIME_614MS" class="py-name" href="#" onclick="return doclink('link-17', '__WTIME_614MS', 'link-17');">__WTIME_614MS</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x00</tt> <tt class="py-comment"># WLONG0 = 614ms   WLONG1 = 7.4s</tt> </tt>
<a name="L31"></a><tt class="py-lineno"> 31</tt>  <tt class="py-line">    <tt id="link-18" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__AILTL=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__AILTL"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__AILTL" class="py-name" href="#" onclick="return doclink('link-18', '__AILTL', 'link-18');">__AILTL</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x04</tt> <tt class="py-comment"># Clear channel lower interrupt threshold</tt> </tt>
<a name="L32"></a><tt class="py-lineno"> 32</tt>  <tt class="py-line">    <tt id="link-19" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__AILTH=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__AILTH"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__AILTH" class="py-name" href="#" onclick="return doclink('link-19', '__AILTH', 'link-19');">__AILTH</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x05</tt> </tt>
<a name="L33"></a><tt class="py-lineno"> 33</tt>  <tt class="py-line">    <tt id="link-20" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__AIHTL=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__AIHTL"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__AIHTL" class="py-name" href="#" onclick="return doclink('link-20', '__AIHTL', 'link-20');">__AIHTL</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x06</tt> <tt class="py-comment"># Clear channel upper interrupt threshold</tt> </tt>
<a name="L34"></a><tt class="py-lineno"> 34</tt>  <tt class="py-line">    <tt id="link-21" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__AIHTH=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__AIHTH"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__AIHTH" class="py-name" href="#" onclick="return doclink('link-21', '__AIHTH', 'link-21');">__AIHTH</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x07</tt> </tt>
<a name="L35"></a><tt class="py-lineno"> 35</tt>  <tt class="py-line">    <tt id="link-22" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__PERS=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__PERS"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__PERS" class="py-name" href="#" onclick="return doclink('link-22', '__PERS', 'link-22');">__PERS</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x0C</tt> <tt class="py-comment"># Persistence register - basic SW filtering mechanism for interrupts</tt> </tt>
<a name="L36"></a><tt class="py-lineno"> 36</tt>  <tt class="py-line">    <tt id="link-23" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_NONE=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__PERS_NONE"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_NONE" class="py-name" href="#" onclick="return doclink('link-23', '__PERS_NONE', 'link-23');">__PERS_NONE</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0b0000</tt> <tt class="py-comment"># Every RGBC cycle generates an interrupt</tt> </tt>
<a name="L37"></a><tt class="py-lineno"> 37</tt>  <tt class="py-line">    <tt id="link-24" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_1_CYCLE=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__PERS_1_CYCLE"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_1_CYCLE" class="py-name" href="#" onclick="return doclink('link-24', '__PERS_1_CYCLE', 'link-24');">__PERS_1_CYCLE</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0b0001</tt> <tt class="py-comment"># 1 clean channel value outside threshold range generates an interrupt</tt> </tt>
<a name="L38"></a><tt class="py-lineno"> 38</tt>  <tt class="py-line">    <tt id="link-25" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_2_CYCLE=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__PERS_2_CYCLE"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_2_CYCLE" class="py-name" href="#" onclick="return doclink('link-25', '__PERS_2_CYCLE', 'link-25');">__PERS_2_CYCLE</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0b0010</tt> <tt class="py-comment"># 2 clean channel values outside threshold range generates an interrupt</tt> </tt>
<a name="L39"></a><tt class="py-lineno"> 39</tt>  <tt class="py-line">    <tt id="link-26" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_3_CYCLE=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__PERS_3_CYCLE"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_3_CYCLE" class="py-name" href="#" onclick="return doclink('link-26', '__PERS_3_CYCLE', 'link-26');">__PERS_3_CYCLE</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0b0011</tt> <tt class="py-comment"># 3 clean channel values outside threshold range generates an interrupt</tt> </tt>
<a name="L40"></a><tt class="py-lineno"> 40</tt>  <tt class="py-line">    <tt id="link-27" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_5_CYCLE=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__PERS_5_CYCLE"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_5_CYCLE" class="py-name" href="#" onclick="return doclink('link-27', '__PERS_5_CYCLE', 'link-27');">__PERS_5_CYCLE</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0b0100</tt> <tt class="py-comment"># 5 clean channel values outside threshold range generates an interrupt</tt> </tt>
<a name="L41"></a><tt class="py-lineno"> 41</tt>  <tt class="py-line">    <tt id="link-28" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_10_CYCLE=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__PERS_10_CYCLE"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_10_CYCLE" class="py-name" href="#" onclick="return doclink('link-28', '__PERS_10_CYCLE', 'link-28');">__PERS_10_CYCLE</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0b0101</tt> <tt class="py-comment"># 10 clean channel values outside threshold range generates an interrupt</tt> </tt>
<a name="L42"></a><tt class="py-lineno"> 42</tt>  <tt class="py-line">    <tt id="link-29" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_15_CYCLE=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__PERS_15_CYCLE"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_15_CYCLE" class="py-name" href="#" onclick="return doclink('link-29', '__PERS_15_CYCLE', 'link-29');">__PERS_15_CYCLE</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0b0110</tt> <tt class="py-comment"># 15 clean channel values outside threshold range generates an interrupt</tt> </tt>
<a name="L43"></a><tt class="py-lineno"> 43</tt>  <tt class="py-line">    <tt id="link-30" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_20_CYCLE=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__PERS_20_CYCLE"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_20_CYCLE" class="py-name" href="#" onclick="return doclink('link-30', '__PERS_20_CYCLE', 'link-30');">__PERS_20_CYCLE</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0b0111</tt> <tt class="py-comment"># 20 clean channel values outside threshold range generates an interrupt</tt> </tt>
<a name="L44"></a><tt class="py-lineno"> 44</tt>  <tt class="py-line">    <tt id="link-31" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_25_CYCLE=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__PERS_25_CYCLE"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_25_CYCLE" class="py-name" href="#" onclick="return doclink('link-31', '__PERS_25_CYCLE', 'link-31');">__PERS_25_CYCLE</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0b1000</tt> <tt class="py-comment"># 25 clean channel values outside threshold range generates an interrupt</tt> </tt>
<a name="L45"></a><tt class="py-lineno"> 45</tt>  <tt class="py-line">    <tt id="link-32" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_30_CYCLE=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__PERS_30_CYCLE"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_30_CYCLE" class="py-name" href="#" onclick="return doclink('link-32', '__PERS_30_CYCLE', 'link-32');">__PERS_30_CYCLE</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0b1001</tt> <tt class="py-comment"># 30 clean channel values outside threshold range generates an interrupt</tt> </tt>
<a name="L46"></a><tt class="py-lineno"> 46</tt>  <tt class="py-line">    <tt id="link-33" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_35_CYCLE=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__PERS_35_CYCLE"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_35_CYCLE" class="py-name" href="#" onclick="return doclink('link-33', '__PERS_35_CYCLE', 'link-33');">__PERS_35_CYCLE</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0b1010</tt> <tt class="py-comment"># 35 clean channel values outside threshold range generates an interrupt</tt> </tt>
<a name="L47"></a><tt class="py-lineno"> 47</tt>  <tt class="py-line">    <tt id="link-34" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_40_CYCLE=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__PERS_40_CYCLE"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_40_CYCLE" class="py-name" href="#" onclick="return doclink('link-34', '__PERS_40_CYCLE', 'link-34');">__PERS_40_CYCLE</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0b1011</tt> <tt class="py-comment"># 40 clean channel values outside threshold range generates an interrupt</tt> </tt>
<a name="L48"></a><tt class="py-lineno"> 48</tt>  <tt class="py-line">    <tt id="link-35" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_45_CYCLE=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__PERS_45_CYCLE"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_45_CYCLE" class="py-name" href="#" onclick="return doclink('link-35', '__PERS_45_CYCLE', 'link-35');">__PERS_45_CYCLE</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0b1100</tt> <tt class="py-comment"># 45 clean channel values outside threshold range generates an interrupt</tt> </tt>
<a name="L49"></a><tt class="py-lineno"> 49</tt>  <tt class="py-line">    <tt id="link-36" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_50_CYCLE=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__PERS_50_CYCLE"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_50_CYCLE" class="py-name" href="#" onclick="return doclink('link-36', '__PERS_50_CYCLE', 'link-36');">__PERS_50_CYCLE</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0b1101</tt> <tt class="py-comment"># 50 clean channel values outside threshold range generates an interrupt</tt> </tt>
<a name="L50"></a><tt class="py-lineno"> 50</tt>  <tt class="py-line">    <tt id="link-37" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_55_CYCLE=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__PERS_55_CYCLE"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_55_CYCLE" class="py-name" href="#" onclick="return doclink('link-37', '__PERS_55_CYCLE', 'link-37');">__PERS_55_CYCLE</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0b1110</tt> <tt class="py-comment"># 55 clean channel values outside threshold range generates an interrupt</tt> </tt>
<a name="L51"></a><tt class="py-lineno"> 51</tt>  <tt class="py-line">    <tt id="link-38" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_60_CYCLE=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__PERS_60_CYCLE"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__PERS_60_CYCLE" class="py-name" href="#" onclick="return doclink('link-38', '__PERS_60_CYCLE', 'link-38');">__PERS_60_CYCLE</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0b1111</tt> <tt class="py-comment"># 60 clean channel values outside threshold range generates an interrupt</tt> </tt>
<a name="L52"></a><tt class="py-lineno"> 52</tt>  <tt class="py-line">    <tt id="link-39" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__CONFIG=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__CONFIG"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__CONFIG" class="py-name" href="#" onclick="return doclink('link-39', '__CONFIG', 'link-39');">__CONFIG</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x0D</tt> </tt>
<a name="L53"></a><tt class="py-lineno"> 53</tt>  <tt class="py-line">    <tt id="link-40" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__CONFIG_WLONG=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__CONFIG_WLONG"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__CONFIG_WLONG" class="py-name" href="#" onclick="return doclink('link-40', '__CONFIG_WLONG', 'link-40');">__CONFIG_WLONG</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x02</tt> <tt class="py-comment"># Choose between short and long (12x) wait times via WTIME</tt> </tt>
<a name="L54"></a><tt class="py-lineno"> 54</tt>  <tt class="py-line">    <tt id="link-41" class="py-name" targets="Variable libsensorPy.concretesensor.bmp085Altitude.BMP085Altitude.__CONTROL=libsensorPy.concretesensor.bmp085Altitude.BMP085Altitude-class.php#__CONTROL,Variable libsensorPy.concretesensor.bmp085Pressure.BMP085Pressure.__CONTROL=libsensorPy.concretesensor.bmp085Pressure.BMP085Pressure-class.php#__CONTROL,Variable libsensorPy.concretesensor.bmp085Temperature.BMP085Temperature.__CONTROL=libsensorPy.concretesensor.bmp085Temperature.BMP085Temperature-class.php#__CONTROL,Variable libsensorPy.concretesensor.tcs34725.TCS34725.__CONTROL=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__CONTROL"><a title="libsensorPy.concretesensor.bmp085Altitude.BMP085Altitude.__CONTROL
libsensorPy.concretesensor.bmp085Pressure.BMP085Pressure.__CONTROL
libsensorPy.concretesensor.bmp085Temperature.BMP085Temperature.__CONTROL
libsensorPy.concretesensor.tcs34725.TCS34725.__CONTROL" class="py-name" href="#" onclick="return doclink('link-41', '__CONTROL', 'link-41');">__CONTROL</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x0F</tt> <tt class="py-comment"># Set the gain level for the sensor</tt> </tt>
<a name="L55"></a><tt class="py-lineno"> 55</tt>  <tt class="py-line">    <tt id="link-42" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__ID=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__ID"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__ID" class="py-name" href="#" onclick="return doclink('link-42', '__ID', 'link-42');">__ID</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x12</tt> <tt class="py-comment"># 0x44 = TCS34721/TCS34725, 0x4D = TCS34723/TCS34727</tt> </tt>
<a name="L56"></a><tt class="py-lineno"> 56</tt>  <tt class="py-line">    <tt id="link-43" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__STATUS=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__STATUS"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__STATUS" class="py-name" href="#" onclick="return doclink('link-43', '__STATUS', 'link-43');">__STATUS</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x13</tt> </tt>
<a name="L57"></a><tt class="py-lineno"> 57</tt>  <tt class="py-line">    <tt id="link-44" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__STATUS_AINT=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__STATUS_AINT"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__STATUS_AINT" class="py-name" href="#" onclick="return doclink('link-44', '__STATUS_AINT', 'link-44');">__STATUS_AINT</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x10</tt> <tt class="py-comment"># RGBC Clean channel interrupt</tt> </tt>
<a name="L58"></a><tt class="py-lineno"> 58</tt>  <tt class="py-line">    <tt id="link-45" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__STATUS_AVALID=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__STATUS_AVALID"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__STATUS_AVALID" class="py-name" href="#" onclick="return doclink('link-45', '__STATUS_AVALID', 'link-45');">__STATUS_AVALID</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x01</tt> <tt class="py-comment"># Indicates that the RGBC channels have completed an integration cycle</tt> </tt>
<a name="L59"></a><tt class="py-lineno"> 59</tt>  <tt class="py-line"> </tt>
<a name="L60"></a><tt class="py-lineno"> 60</tt>  <tt class="py-line">    <tt id="link-46" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__CDATAL=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__CDATAL"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__CDATAL" class="py-name" href="#" onclick="return doclink('link-46', '__CDATAL', 'link-46');">__CDATAL</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x14</tt> <tt class="py-comment"># Clear channel data</tt> </tt>
<a name="L61"></a><tt class="py-lineno"> 61</tt>  <tt class="py-line">    <tt id="link-47" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__CDATAH=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__CDATAH"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__CDATAH" class="py-name" href="#" onclick="return doclink('link-47', '__CDATAH', 'link-47');">__CDATAH</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x15</tt> </tt>
<a name="L62"></a><tt class="py-lineno"> 62</tt>  <tt class="py-line">    <tt id="link-48" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__RDATAL=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__RDATAL"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__RDATAL" class="py-name" href="#" onclick="return doclink('link-48', '__RDATAL', 'link-48');">__RDATAL</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x16</tt> <tt class="py-comment"># Red channel data</tt> </tt>
<a name="L63"></a><tt class="py-lineno"> 63</tt>  <tt class="py-line">    <tt id="link-49" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__RDATAH=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__RDATAH"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__RDATAH" class="py-name" href="#" onclick="return doclink('link-49', '__RDATAH', 'link-49');">__RDATAH</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x17</tt> </tt>
<a name="L64"></a><tt class="py-lineno"> 64</tt>  <tt class="py-line">    <tt id="link-50" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__GDATAL=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__GDATAL"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__GDATAL" class="py-name" href="#" onclick="return doclink('link-50', '__GDATAL', 'link-50');">__GDATAL</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x18</tt> <tt class="py-comment"># Green channel data</tt> </tt>
<a name="L65"></a><tt class="py-lineno"> 65</tt>  <tt class="py-line">    <tt id="link-51" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__GDATAH=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__GDATAH"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__GDATAH" class="py-name" href="#" onclick="return doclink('link-51', '__GDATAH', 'link-51');">__GDATAH</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x19</tt> </tt>
<a name="L66"></a><tt class="py-lineno"> 66</tt>  <tt class="py-line">    <tt id="link-52" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__BDATAL=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__BDATAL"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__BDATAL" class="py-name" href="#" onclick="return doclink('link-52', '__BDATAL', 'link-52');">__BDATAL</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x1A</tt> <tt class="py-comment"># Blue channel data</tt> </tt>
<a name="L67"></a><tt class="py-lineno"> 67</tt>  <tt class="py-line">    <tt id="link-53" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__BDATAH=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__BDATAH"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__BDATAH" class="py-name" href="#" onclick="return doclink('link-53', '__BDATAH', 'link-53');">__BDATAH</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x1B</tt> </tt>
<a name="L68"></a><tt class="py-lineno"> 68</tt>  <tt class="py-line"> </tt>
<a name="L69"></a><tt class="py-lineno"> 69</tt>  <tt class="py-line">    <tt id="link-54" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__INTEGRATIONTIME_2_4MS=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__INTEGRATIONTIME_2_4MS"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__INTEGRATIONTIME_2_4MS" class="py-name" href="#" onclick="return doclink('link-54', '__INTEGRATIONTIME_2_4MS', 'link-54');">__INTEGRATIONTIME_2_4MS</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0xFF</tt>   <tt class="py-comment">#  2.4ms - 1 cycle    - Max Count: 1024</tt> </tt>
<a name="L70"></a><tt class="py-lineno"> 70</tt>  <tt class="py-line">    <tt id="link-55" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__INTEGRATIONTIME_24MS=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__INTEGRATIONTIME_24MS"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__INTEGRATIONTIME_24MS" class="py-name" href="#" onclick="return doclink('link-55', '__INTEGRATIONTIME_24MS', 'link-55');">__INTEGRATIONTIME_24MS</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0xF6</tt>   <tt class="py-comment"># 24ms  - 10 cycles  - Max Count: 10240</tt> </tt>
<a name="L71"></a><tt class="py-lineno"> 71</tt>  <tt class="py-line">    <tt id="link-56" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__INTEGRATIONTIME_50MS=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__INTEGRATIONTIME_50MS"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__INTEGRATIONTIME_50MS" class="py-name" href="#" onclick="return doclink('link-56', '__INTEGRATIONTIME_50MS', 'link-56');">__INTEGRATIONTIME_50MS</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0xEB</tt>   <tt class="py-comment">#  50ms  - 20 cycles  - Max Count: 20480</tt> </tt>
<a name="L72"></a><tt class="py-lineno"> 72</tt>  <tt class="py-line">    <tt id="link-57" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__INTEGRATIONTIME_101MS=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__INTEGRATIONTIME_101MS"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__INTEGRATIONTIME_101MS" class="py-name" href="#" onclick="return doclink('link-57', '__INTEGRATIONTIME_101MS', 'link-57');">__INTEGRATIONTIME_101MS</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0xD5</tt>   <tt class="py-comment">#  101ms - 42 cycles  - Max Count: 43008</tt> </tt>
<a name="L73"></a><tt class="py-lineno"> 73</tt>  <tt class="py-line">    <tt id="link-58" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__INTEGRATIONTIME_154MS=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__INTEGRATIONTIME_154MS"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__INTEGRATIONTIME_154MS" class="py-name" href="#" onclick="return doclink('link-58', '__INTEGRATIONTIME_154MS', 'link-58');">__INTEGRATIONTIME_154MS</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0xC0</tt>   <tt class="py-comment">#  154ms - 64 cycles  - Max Count: 65535</tt> </tt>
<a name="L74"></a><tt class="py-lineno"> 74</tt>  <tt class="py-line">    <tt id="link-59" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__INTEGRATIONTIME_700MS=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__INTEGRATIONTIME_700MS"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__INTEGRATIONTIME_700MS" class="py-name" href="#" onclick="return doclink('link-59', '__INTEGRATIONTIME_700MS', 'link-59');">__INTEGRATIONTIME_700MS</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x00</tt>   <tt class="py-comment">#  700ms - 256 cycles - Max Count: 65535</tt> </tt>
<a name="L75"></a><tt class="py-lineno"> 75</tt>  <tt class="py-line"> </tt>
<a name="L76"></a><tt class="py-lineno"> 76</tt>  <tt class="py-line">    <tt id="link-60" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__GAIN_1X=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__GAIN_1X"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__GAIN_1X" class="py-name" href="#" onclick="return doclink('link-60', '__GAIN_1X', 'link-60');">__GAIN_1X</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x00</tt>   <tt class="py-comment">#  No gain</tt> </tt>
<a name="L77"></a><tt class="py-lineno"> 77</tt>  <tt class="py-line">    <tt id="link-61" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__GAIN_4X=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__GAIN_4X"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__GAIN_4X" class="py-name" href="#" onclick="return doclink('link-61', '__GAIN_4X', 'link-61');">__GAIN_4X</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x01</tt>   <tt class="py-comment">#  2x gain</tt> </tt>
<a name="L78"></a><tt class="py-lineno"> 78</tt>  <tt class="py-line">    <tt id="link-62" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__GAIN_16X=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__GAIN_16X"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__GAIN_16X" class="py-name" href="#" onclick="return doclink('link-62', '__GAIN_16X', 'link-62');">__GAIN_16X</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x02</tt>   <tt class="py-comment">#  16x gain</tt> </tt>
<a name="L79"></a><tt class="py-lineno"> 79</tt>  <tt class="py-line">    <tt id="link-63" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__GAIN_60X=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__GAIN_60X"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__GAIN_60X" class="py-name" href="#" onclick="return doclink('link-63', '__GAIN_60X', 'link-63');">__GAIN_60X</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0x03</tt>   <tt class="py-comment">#  60x gain</tt> </tt>
<a name="L80"></a><tt class="py-lineno"> 80</tt>  <tt class="py-line"> </tt>
<a name="L81"></a><tt class="py-lineno"> 81</tt>  <tt class="py-line">    <tt id="link-64" class="py-name" targets="Variable libsensorPy.concretesensor.tcs34725.TCS34725.__integrationTimeDelay=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__integrationTimeDelay"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__integrationTimeDelay" class="py-name" href="#" onclick="return doclink('link-64', '__integrationTimeDelay', 'link-64');">__integrationTimeDelay</a></tt> <tt class="py-op">=</tt> <tt class="py-op">{</tt> </tt>
<a name="L82"></a><tt class="py-lineno"> 82</tt>  <tt class="py-line">        <tt class="py-number">0xFF</tt><tt class="py-op">:</tt> <tt class="py-number">0.0024</tt><tt class="py-op">,</tt>  <tt class="py-comment"># 2.4ms - 1 cycle    - Max Count: 1024</tt> </tt>
<a name="L83"></a><tt class="py-lineno"> 83</tt>  <tt class="py-line">        <tt class="py-number">0xF6</tt><tt class="py-op">:</tt> <tt class="py-number">0.024</tt><tt class="py-op">,</tt>   <tt class="py-comment"># 24ms  - 10 cycles  - Max Count: 10240</tt> </tt>
<a name="L84"></a><tt class="py-lineno"> 84</tt>  <tt class="py-line">        <tt class="py-number">0xEB</tt><tt class="py-op">:</tt> <tt class="py-number">0.050</tt><tt class="py-op">,</tt>   <tt class="py-comment"># 50ms  - 20 cycles  - Max Count: 20480</tt> </tt>
<a name="L85"></a><tt class="py-lineno"> 85</tt>  <tt class="py-line">        <tt class="py-number">0xD5</tt><tt class="py-op">:</tt> <tt class="py-number">0.101</tt><tt class="py-op">,</tt>   <tt class="py-comment"># 101ms - 42 cycles  - Max Count: 43008</tt> </tt>
<a name="L86"></a><tt class="py-lineno"> 86</tt>  <tt class="py-line">        <tt class="py-number">0xC0</tt><tt class="py-op">:</tt> <tt class="py-number">0.154</tt><tt class="py-op">,</tt>   <tt class="py-comment"># 154ms - 64 cycles  - Max Count: 65535</tt> </tt>
<a name="L87"></a><tt class="py-lineno"> 87</tt>  <tt class="py-line">        <tt class="py-number">0x00</tt><tt class="py-op">:</tt> <tt class="py-number">0.700</tt>    <tt class="py-comment"># 700ms - 256 cycles - Max Count: 65535</tt> </tt>
<a name="L88"></a><tt class="py-lineno"> 88</tt>  <tt class="py-line">    <tt class="py-op">}</tt> </tt>
<a name="L89"></a><tt class="py-lineno"> 89</tt>  <tt class="py-line"> </tt>
<a name="L90"></a><tt class="py-lineno"> 90</tt>  <tt class="py-line"> </tt>
<a name="TCS34725.__init__"></a><div id="TCS34725.__init__-def"><a name="L91"></a><tt class="py-lineno"> 91</tt> <a class="py-toggle" href="#" id="TCS34725.__init__-toggle" onclick="return toggle('TCS34725.__init__');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__init__">__init__</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">address</tt><tt class="py-op">=</tt><tt class="py-number">0x29</tt><tt class="py-op">,</tt> <tt class="py-param">debug</tt><tt class="py-op">=</tt><tt class="py-name">False</tt><tt class="py-op">,</tt> <tt class="py-param">integrationTime</tt><tt class="py-op">=</tt><tt class="py-number">0xFF</tt><tt class="py-op">,</tt> <tt class="py-param">gain</tt><tt class="py-op">=</tt><tt class="py-number">0x01</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="TCS34725.__init__-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="TCS34725.__init__-expanded"><a name="L92"></a><tt class="py-lineno"> 92</tt>  <tt class="py-line">        <tt class="py-docstring">"""       </tt> </tt>
<a name="L93"></a><tt class="py-lineno"> 93</tt>  <tt class="py-line"><tt class="py-docstring">        @param address: The register's address to be read</tt> </tt>
<a name="L94"></a><tt class="py-lineno"> 94</tt>  <tt class="py-line"><tt class="py-docstring">        @type address: int16</tt> </tt>
<a name="L95"></a><tt class="py-lineno"> 95</tt>  <tt class="py-line"><tt class="py-docstring">        @param debug: If debug is enabled</tt> </tt>
<a name="L96"></a><tt class="py-lineno"> 96</tt>  <tt class="py-line"><tt class="py-docstring">        @type debug: Boolean</tt> </tt>
<a name="L97"></a><tt class="py-lineno"> 97</tt>  <tt class="py-line"><tt class="py-docstring">        @param integrationTime: Integration time</tt> </tt>
<a name="L98"></a><tt class="py-lineno"> 98</tt>  <tt class="py-line"><tt class="py-docstring">        @type integrationTime: int16</tt> </tt>
<a name="L99"></a><tt class="py-lineno"> 99</tt>  <tt class="py-line"><tt class="py-docstring">        @param gain: The sensor's gain </tt> </tt>
<a name="L100"></a><tt class="py-lineno">100</tt>  <tt class="py-line"><tt class="py-docstring">        @type gain: int16</tt> </tt>
<a name="L101"></a><tt class="py-lineno">101</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L102"></a><tt class="py-lineno">102</tt>  <tt class="py-line">         </tt>
<a name="L103"></a><tt class="py-lineno">103</tt>  <tt class="py-line">        <tt id="link-65" class="py-name"><a title="libsensorPy.abstractclass.lightSensor.LightSensor" class="py-name" href="#" onclick="return doclink('link-65', 'LightSensor', 'link-5');">LightSensor</a></tt><tt class="py-op">.</tt><tt id="link-66" class="py-name" targets="Method libsensorPy.abstractclass.abstractActuatorFactory.AbstractActuatorFactory.__init__()=libsensorPy.abstractclass.abstractActuatorFactory.AbstractActuatorFactory-class.php#__init__,Method libsensorPy.abstractclass.abstractEvent.AbstractEvent.__init__()=libsensorPy.abstractclass.abstractEvent.AbstractEvent-class.php#__init__,Method libsensorPy.abstractclass.abstractSensorFactory.AbstractSensorFactory.__init__()=libsensorPy.abstractclass.abstractSensorFactory.AbstractSensorFactory-class.php#__init__,Method libsensorPy.abstractclass.accelerometerSensor.AccelerometerSensor.__init__()=libsensorPy.abstractclass.accelerometerSensor.AccelerometerSensor-class.php#__init__,Method libsensorPy.abstractclass.actuator.Actuator.__init__()=libsensorPy.abstractclass.actuator.Actuator-class.php#__init__,Method libsensorPy.abstractclass.altitudeSensor.AltitudeSensor.__init__()=libsensorPy.abstractclass.altitudeSensor.AltitudeSensor-class.php#__init__,Method libsensorPy.abstractclass.dcMotorActuator.DCMotorActuator.__init__()=libsensorPy.abstractclass.dcMotorActuator.DCMotorActuator-class.php#__init__,Method libsensorPy.abstractclass.eventObserver.EventObserver.__init__()=libsensorPy.abstractclass.eventObserver.EventObserver-class.php#__init__,Method libsensorPy.abstractclass.humiditySensor.HumiditySensor.__init__()=libsensorPy.abstractclass.humiditySensor.HumiditySensor-class.php#__init__,Method libsensorPy.abstractclass.lightSensor.LightSensor.__init__()=libsensorPy.abstractclass.lightSensor.LightSensor-class.php#__init__,Method libsensorPy.abstractclass.magnetometerSensor.MagnetometerSensor.__init__()=libsensorPy.abstractclass.magnetometerSensor.MagnetometerSensor-class.php#__init__,Method libsensorPy.abstractclass.motionSensor.MotionSensor.__init__()=libsensorPy.abstractclass.motionSensor.MotionSensor-class.php#__init__,Method libsensorPy.abstractclass.motorActuator.MotorActuator.__init__()=libsensorPy.abstractclass.motorActuator.MotorActuator-class.php#__init__,Method libsensorPy.abstractclass.pressureSensor.PressureSensor.__init__()=libsensorPy.abstractclass.pressureSensor.PressureSensor-class.php#__init__,Method libsensorPy.abstractclass.sensor.Sensor.__init__()=libsensorPy.abstractclass.sensor.Sensor-class.php#__init__,Method libsensorPy.abstractclass.servoMotorActuator.ServoMotorActuator.__init__()=libsensorPy.abstractclass.servoMotorActuator.ServoMotorActuator-class.php#__init__,Method libsensorPy.abstractclass.stepperMotorActuator.StepperMotorActuator.__init__()=libsensorPy.abstractclass.stepperMotorActuator.StepperMotorActuator-class.php#__init__,Method libsensorPy.abstractclass.temperatureSensor.TemperatureSensor.__init__()=libsensorPy.abstractclass.temperatureSensor.TemperatureSensor-class.php#__init__,Method libsensorPy.abstractclass.ultrasonicSensor.UltrasonicSensor.__init__()=libsensorPy.abstractclass.ultrasonicSensor.UltrasonicSensor-class.php#__init__,Method libsensorPy.compositesensor.bmp085Composite.BMP085Composite.__init__()=libsensorPy.compositesensor.bmp085Composite.BMP085Composite-class.php#__init__,Method libsensorPy.compositesensor.dht11Composite.DHT11Composite.__init__()=libsensorPy.compositesensor.dht11Composite.DHT11Composite-class.php#__init__,Method libsensorPy.compositesensor.dht22Composite.DHT22Composite.__init__()=libsensorPy.compositesensor.dht22Composite.DHT22Composite-class.php#__init__,Method libsensorPy.compositesensor.lsm303dComposite.LSM303DComposite.__init__()=libsensorPy.compositesensor.lsm303dComposite.LSM303DComposite-class.php#__init__,Method libsensorPy.concreteactuator.stepper28BJY48.Stepper28BJY48.__init__()=libsensorPy.concreteactuator.stepper28BJY48.Stepper28BJY48-class.php#__init__,Method libsensorPy.concreteevent.temperatureEvent.TemperatureEvent.__init__()=libsensorPy.concreteevent.temperatureEvent.TemperatureEvent-class.php#__init__,Method libsensorPy.concretefactory.accelerometerSensorFactory.AccelerometerSensorFactory.__init__()=libsensorPy.concretefactory.accelerometerSensorFactory.AccelerometerSensorFactory-class.php#__init__,Method libsensorPy.concretefactory.altitudeSensorFactory.AltitudeSensorFactory.__init__()=libsensorPy.concretefactory.altitudeSensorFactory.AltitudeSensorFactory-class.php#__init__,Method libsensorPy.concretefactory.compositeSensorFactory.CompositeSensorFactory.__init__()=libsensorPy.concretefactory.compositeSensorFactory.CompositeSensorFactory-class.php#__init__,Method libsensorPy.concretefactory.humiditySensorFactory.HumididtySensorFactory.__init__()=libsensorPy.concretefactory.humiditySensorFactory.HumididtySensorFactory-class.php#__init__,Method libsensorPy.concretefactory.lightSensorFactory.LightSensorFactory.__init__()=libsensorPy.concretefactory.lightSensorFactory.LightSensorFactory-class.php#__init__,Method libsensorPy.concretefactory.magnetometerSensorFactory.MagnetometerSensorFactory.__init__()=libsensorPy.concretefactory.magnetometerSensorFactory.MagnetometerSensorFactory-class.php#__init__,Method libsensorPy.concretefactory.motionSensorFactory.MotionSensorFactory.__init__()=libsensorPy.concretefactory.motionSensorFactory.MotionSensorFactory-class.php#__init__,Method libsensorPy.concretefactory.pressureSensorFactory.PressureSensorFactory.__init__()=libsensorPy.concretefactory.pressureSensorFactory.PressureSensorFactory-class.php#__init__,Method libsensorPy.concretefactory.stepperMotorActuatorFactory.StepperMotorActuatorFactory.__init__()=libsensorPy.concretefactory.stepperMotorActuatorFactory.StepperMotorActuatorFactory-class.php#__init__,Method libsensorPy.concretefactory.temperatureSensorFactory.TemperatureSensorFactory.__init__()=libsensorPy.concretefactory.temperatureSensorFactory.TemperatureSensorFactory-class.php#__init__,Method libsensorPy.concretefactory.ultrasonicSensorFactory.UltrasonicSensorFactory.__init__()=libsensorPy.concretefactory.ultrasonicSensorFactory.UltrasonicSensorFactory-class.php#__init__,Method libsensorPy.concreteobserver.currentConditionDisplay.CurrentConditionDisplay.__init__()=libsensorPy.concreteobserver.currentConditionDisplay.CurrentConditionDisplay-class.php#__init__,Method libsensorPy.concretesensor.adxl345.ADXL345.__init__()=libsensorPy.concretesensor.adxl345.ADXL345-class.php#__init__,Method libsensorPy.concretesensor.bmp085Altitude.BMP085Altitude.__init__()=libsensorPy.concretesensor.bmp085Altitude.BMP085Altitude-class.php#__init__,Method libsensorPy.concretesensor.bmp085Pressure.BMP085Pressure.__init__()=libsensorPy.concretesensor.bmp085Pressure.BMP085Pressure-class.php#__init__,Method libsensorPy.concretesensor.bmp085Temperature.BMP085Temperature.__init__()=libsensorPy.concretesensor.bmp085Temperature.BMP085Temperature-class.php#__init__,Method libsensorPy.concretesensor.dht11Humidity.DHT11Humidity.__init__()=libsensorPy.concretesensor.dht11Humidity.DHT11Humidity-class.php#__init__,Method libsensorPy.concretesensor.dht11Temperature.DHT11Temperature.__init__()=libsensorPy.concretesensor.dht11Temperature.DHT11Temperature-class.php#__init__,Method libsensorPy.concretesensor.dht22Humidity.DHT22Humidity.__init__()=libsensorPy.concretesensor.dht22Humidity.DHT22Humidity-class.php#__init__,Method libsensorPy.concretesensor.dht22Temperature.DHT22Temperature.__init__()=libsensorPy.concretesensor.dht22Temperature.DHT22Temperature-class.php#__init__,Method libsensorPy.concretesensor.hmc5883l.HMC5883L.__init__()=libsensorPy.concretesensor.hmc5883l.HMC5883L-class.php#__init__,Method libsensorPy.concretesensor.hysrf05.HYSRF05.__init__()=libsensorPy.concretesensor.hysrf05.HYSRF05-class.php#__init__,Method libsensorPy.concretesensor.lsm303dAccelerometer.LSM303DAccelerometer.__init__()=libsensorPy.concretesensor.lsm303dAccelerometer.LSM303DAccelerometer-class.php#__init__,Method libsensorPy.concretesensor.lsm303dMagnetometer.LSM303DMagnetometer.__init__()=libsensorPy.concretesensor.lsm303dMagnetometer.LSM303DMagnetometer-class.php#__init__,Method libsensorPy.concretesensor.parallaxPing.ParallaxPing.__init__()=libsensorPy.concretesensor.parallaxPing.ParallaxPing-class.php#__init__,Method libsensorPy.concretesensor.pir.PIR.__init__()=libsensorPy.concretesensor.pir.PIR-class.php#__init__,Method libsensorPy.concretesensor.srf04.SRF04.__init__()=libsensorPy.concretesensor.srf04.SRF04-class.php#__init__,Method libsensorPy.concretesensor.srf05.SRF05.__init__()=libsensorPy.concretesensor.srf05.SRF05-class.php#__init__,Method libsensorPy.concretesensor.tcs34725.TCS34725.__init__()=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__init__,Method libsensorPy.concretesensor.urm37.URM37.__init__()=libsensorPy.concretesensor.urm37.URM37-class.php#__init__,Method libsensorPy.extension.extendedUltrasonicSensorFactory.ExtendedUltrasonicSensorFactory.__init__()=libsensorPy.extension.extendedUltrasonicSensorFactory.ExtendedUltrasonicSensorFactory-class.php#__init__,Method libsensorPy.extension.hcsr04.HCSR04.__init__()=libsensorPy.extension.hcsr04.HCSR04-class.php#__init__,Method libsensorPy.utils.pycomms.PyComms.__init__()=libsensorPy.utils.pycomms.PyComms-class.php#__init__"><a title="libsensorPy.abstractclass.abstractActuatorFactory.AbstractActuatorFactory.__init__
libsensorPy.abstractclass.abstractEvent.AbstractEvent.__init__
libsensorPy.abstractclass.abstractSensorFactory.AbstractSensorFactory.__init__
libsensorPy.abstractclass.accelerometerSensor.AccelerometerSensor.__init__
libsensorPy.abstractclass.actuator.Actuator.__init__
libsensorPy.abstractclass.altitudeSensor.AltitudeSensor.__init__
libsensorPy.abstractclass.dcMotorActuator.DCMotorActuator.__init__
libsensorPy.abstractclass.eventObserver.EventObserver.__init__
libsensorPy.abstractclass.humiditySensor.HumiditySensor.__init__
libsensorPy.abstractclass.lightSensor.LightSensor.__init__
libsensorPy.abstractclass.magnetometerSensor.MagnetometerSensor.__init__
libsensorPy.abstractclass.motionSensor.MotionSensor.__init__
libsensorPy.abstractclass.motorActuator.MotorActuator.__init__
libsensorPy.abstractclass.pressureSensor.PressureSensor.__init__
libsensorPy.abstractclass.sensor.Sensor.__init__
libsensorPy.abstractclass.servoMotorActuator.ServoMotorActuator.__init__
libsensorPy.abstractclass.stepperMotorActuator.StepperMotorActuator.__init__
libsensorPy.abstractclass.temperatureSensor.TemperatureSensor.__init__
libsensorPy.abstractclass.ultrasonicSensor.UltrasonicSensor.__init__
libsensorPy.compositesensor.bmp085Composite.BMP085Composite.__init__
libsensorPy.compositesensor.dht11Composite.DHT11Composite.__init__
libsensorPy.compositesensor.dht22Composite.DHT22Composite.__init__
libsensorPy.compositesensor.lsm303dComposite.LSM303DComposite.__init__
libsensorPy.concreteactuator.stepper28BJY48.Stepper28BJY48.__init__
libsensorPy.concreteevent.temperatureEvent.TemperatureEvent.__init__
libsensorPy.concretefactory.accelerometerSensorFactory.AccelerometerSensorFactory.__init__
libsensorPy.concretefactory.altitudeSensorFactory.AltitudeSensorFactory.__init__
libsensorPy.concretefactory.compositeSensorFactory.CompositeSensorFactory.__init__
libsensorPy.concretefactory.humiditySensorFactory.HumididtySensorFactory.__init__
libsensorPy.concretefactory.lightSensorFactory.LightSensorFactory.__init__
libsensorPy.concretefactory.magnetometerSensorFactory.MagnetometerSensorFactory.__init__
libsensorPy.concretefactory.motionSensorFactory.MotionSensorFactory.__init__
libsensorPy.concretefactory.pressureSensorFactory.PressureSensorFactory.__init__
libsensorPy.concretefactory.stepperMotorActuatorFactory.StepperMotorActuatorFactory.__init__
libsensorPy.concretefactory.temperatureSensorFactory.TemperatureSensorFactory.__init__
libsensorPy.concretefactory.ultrasonicSensorFactory.UltrasonicSensorFactory.__init__
libsensorPy.concreteobserver.currentConditionDisplay.CurrentConditionDisplay.__init__
libsensorPy.concretesensor.adxl345.ADXL345.__init__
libsensorPy.concretesensor.bmp085Altitude.BMP085Altitude.__init__
libsensorPy.concretesensor.bmp085Pressure.BMP085Pressure.__init__
libsensorPy.concretesensor.bmp085Temperature.BMP085Temperature.__init__
libsensorPy.concretesensor.dht11Humidity.DHT11Humidity.__init__
libsensorPy.concretesensor.dht11Temperature.DHT11Temperature.__init__
libsensorPy.concretesensor.dht22Humidity.DHT22Humidity.__init__
libsensorPy.concretesensor.dht22Temperature.DHT22Temperature.__init__
libsensorPy.concretesensor.hmc5883l.HMC5883L.__init__
libsensorPy.concretesensor.hysrf05.HYSRF05.__init__
libsensorPy.concretesensor.lsm303dAccelerometer.LSM303DAccelerometer.__init__
libsensorPy.concretesensor.lsm303dMagnetometer.LSM303DMagnetometer.__init__
libsensorPy.concretesensor.parallaxPing.ParallaxPing.__init__
libsensorPy.concretesensor.pir.PIR.__init__
libsensorPy.concretesensor.srf04.SRF04.__init__
libsensorPy.concretesensor.srf05.SRF05.__init__
libsensorPy.concretesensor.tcs34725.TCS34725.__init__
libsensorPy.concretesensor.urm37.URM37.__init__
libsensorPy.extension.extendedUltrasonicSensorFactory.ExtendedUltrasonicSensorFactory.__init__
libsensorPy.extension.hcsr04.HCSR04.__init__
libsensorPy.utils.pycomms.PyComms.__init__" class="py-name" href="#" onclick="return doclink('link-66', '__init__', 'link-66');">__init__</a></tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">)</tt> </tt>
<a name="L104"></a><tt class="py-lineno">104</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">__i2c</tt> <tt class="py-op">=</tt> <tt id="link-67" class="py-name"><a title="libsensorPy.utils.pycomms.PyComms" class="py-name" href="#" onclick="return doclink('link-67', 'PyComms', 'link-2');">PyComms</a></tt><tt class="py-op">(</tt><tt id="link-68" class="py-name" targets="Variable libsensorPy.concretesensor.adxl345.ADXL345.address=libsensorPy.concretesensor.adxl345.ADXL345-class.php#address"><a title="libsensorPy.concretesensor.adxl345.ADXL345.address" class="py-name" href="#" onclick="return doclink('link-68', 'address', 'link-68');">address</a></tt><tt class="py-op">)</tt> </tt>
<a name="L105"></a><tt class="py-lineno">105</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-69" class="py-name" targets="Method libsensorPy.abstractclass.accelerometerSensor.AccelerometerSensor.setup()=libsensorPy.abstractclass.accelerometerSensor.AccelerometerSensor-class.php#setup,Method libsensorPy.abstractclass.actuator.Actuator.setup()=libsensorPy.abstractclass.actuator.Actuator-class.php#setup,Method libsensorPy.abstractclass.altitudeSensor.AltitudeSensor.setup()=libsensorPy.abstractclass.altitudeSensor.AltitudeSensor-class.php#setup,Method libsensorPy.abstractclass.humiditySensor.HumiditySensor.setup()=libsensorPy.abstractclass.humiditySensor.HumiditySensor-class.php#setup,Method libsensorPy.abstractclass.lightSensor.LightSensor.setup()=libsensorPy.abstractclass.lightSensor.LightSensor-class.php#setup,Method libsensorPy.abstractclass.magnetometerSensor.MagnetometerSensor.setup()=libsensorPy.abstractclass.magnetometerSensor.MagnetometerSensor-class.php#setup,Method libsensorPy.abstractclass.motionSensor.MotionSensor.setup()=libsensorPy.abstractclass.motionSensor.MotionSensor-class.php#setup,Method libsensorPy.abstractclass.motorActuator.MotorActuator.setup()=libsensorPy.abstractclass.motorActuator.MotorActuator-class.php#setup,Method libsensorPy.abstractclass.pressureSensor.PressureSensor.setup()=libsensorPy.abstractclass.pressureSensor.PressureSensor-class.php#setup,Method libsensorPy.abstractclass.sensor.Sensor.setup()=libsensorPy.abstractclass.sensor.Sensor-class.php#setup,Method libsensorPy.abstractclass.temperatureSensor.TemperatureSensor.setup()=libsensorPy.abstractclass.temperatureSensor.TemperatureSensor-class.php#setup,Method libsensorPy.abstractclass.ultrasonicSensor.UltrasonicSensor.setup()=libsensorPy.abstractclass.ultrasonicSensor.UltrasonicSensor-class.php#setup,Method libsensorPy.compositesensor.bmp085Composite.BMP085Composite.setup()=libsensorPy.compositesensor.bmp085Composite.BMP085Composite-class.php#setup,Method libsensorPy.compositesensor.dht11Composite.DHT11Composite.setup()=libsensorPy.compositesensor.dht11Composite.DHT11Composite-class.php#setup,Method libsensorPy.compositesensor.dht22Composite.DHT22Composite.setup()=libsensorPy.compositesensor.dht22Composite.DHT22Composite-class.php#setup,Method libsensorPy.compositesensor.lsm303dComposite.LSM303DComposite.setup()=libsensorPy.compositesensor.lsm303dComposite.LSM303DComposite-class.php#setup,Method libsensorPy.concreteactuator.stepper28BJY48.Stepper28BJY48.setup()=libsensorPy.concreteactuator.stepper28BJY48.Stepper28BJY48-class.php#setup,Method libsensorPy.concretesensor.adxl345.ADXL345.setup()=libsensorPy.concretesensor.adxl345.ADXL345-class.php#setup,Method libsensorPy.concretesensor.bmp085Altitude.BMP085Altitude.setup()=libsensorPy.concretesensor.bmp085Altitude.BMP085Altitude-class.php#setup,Method libsensorPy.concretesensor.bmp085Pressure.BMP085Pressure.setup()=libsensorPy.concretesensor.bmp085Pressure.BMP085Pressure-class.php#setup,Method libsensorPy.concretesensor.bmp085Temperature.BMP085Temperature.setup()=libsensorPy.concretesensor.bmp085Temperature.BMP085Temperature-class.php#setup,Method libsensorPy.concretesensor.dht11Humidity.DHT11Humidity.setup()=libsensorPy.concretesensor.dht11Humidity.DHT11Humidity-class.php#setup,Method libsensorPy.concretesensor.dht11Temperature.DHT11Temperature.setup()=libsensorPy.concretesensor.dht11Temperature.DHT11Temperature-class.php#setup,Method libsensorPy.concretesensor.dht22Humidity.DHT22Humidity.setup()=libsensorPy.concretesensor.dht22Humidity.DHT22Humidity-class.php#setup,Method libsensorPy.concretesensor.dht22Temperature.DHT22Temperature.setup()=libsensorPy.concretesensor.dht22Temperature.DHT22Temperature-class.php#setup,Method libsensorPy.concretesensor.hmc5883l.HMC5883L.setup()=libsensorPy.concretesensor.hmc5883l.HMC5883L-class.php#setup,Method libsensorPy.concretesensor.hysrf05.HYSRF05.setup()=libsensorPy.concretesensor.hysrf05.HYSRF05-class.php#setup,Method libsensorPy.concretesensor.lsm303dAccelerometer.LSM303DAccelerometer.setup()=libsensorPy.concretesensor.lsm303dAccelerometer.LSM303DAccelerometer-class.php#setup,Method libsensorPy.concretesensor.lsm303dMagnetometer.LSM303DMagnetometer.setup()=libsensorPy.concretesensor.lsm303dMagnetometer.LSM303DMagnetometer-class.php#setup,Method libsensorPy.concretesensor.parallaxPing.ParallaxPing.setup()=libsensorPy.concretesensor.parallaxPing.ParallaxPing-class.php#setup,Method libsensorPy.concretesensor.pir.PIR.setup()=libsensorPy.concretesensor.pir.PIR-class.php#setup,Method libsensorPy.concretesensor.srf04.SRF04.setup()=libsensorPy.concretesensor.srf04.SRF04-class.php#setup,Method libsensorPy.concretesensor.srf05.SRF05.setup()=libsensorPy.concretesensor.srf05.SRF05-class.php#setup,Method libsensorPy.concretesensor.tcs34725.TCS34725.setup()=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#setup,Method libsensorPy.concretesensor.urm37.URM37.setup()=libsensorPy.concretesensor.urm37.URM37-class.php#setup,Method libsensorPy.extension.hcsr04.HCSR04.setup()=libsensorPy.extension.hcsr04.HCSR04-class.php#setup,Module libsensorPy.setup=libsensorPy.setup-module.php"><a title="libsensorPy.abstractclass.accelerometerSensor.AccelerometerSensor.setup
libsensorPy.abstractclass.actuator.Actuator.setup
libsensorPy.abstractclass.altitudeSensor.AltitudeSensor.setup
libsensorPy.abstractclass.humiditySensor.HumiditySensor.setup
libsensorPy.abstractclass.lightSensor.LightSensor.setup
libsensorPy.abstractclass.magnetometerSensor.MagnetometerSensor.setup
libsensorPy.abstractclass.motionSensor.MotionSensor.setup
libsensorPy.abstractclass.motorActuator.MotorActuator.setup
libsensorPy.abstractclass.pressureSensor.PressureSensor.setup
libsensorPy.abstractclass.sensor.Sensor.setup
libsensorPy.abstractclass.temperatureSensor.TemperatureSensor.setup
libsensorPy.abstractclass.ultrasonicSensor.UltrasonicSensor.setup
libsensorPy.compositesensor.bmp085Composite.BMP085Composite.setup
libsensorPy.compositesensor.dht11Composite.DHT11Composite.setup
libsensorPy.compositesensor.dht22Composite.DHT22Composite.setup
libsensorPy.compositesensor.lsm303dComposite.LSM303DComposite.setup
libsensorPy.concreteactuator.stepper28BJY48.Stepper28BJY48.setup
libsensorPy.concretesensor.adxl345.ADXL345.setup
libsensorPy.concretesensor.bmp085Altitude.BMP085Altitude.setup
libsensorPy.concretesensor.bmp085Pressure.BMP085Pressure.setup
libsensorPy.concretesensor.bmp085Temperature.BMP085Temperature.setup
libsensorPy.concretesensor.dht11Humidity.DHT11Humidity.setup
libsensorPy.concretesensor.dht11Temperature.DHT11Temperature.setup
libsensorPy.concretesensor.dht22Humidity.DHT22Humidity.setup
libsensorPy.concretesensor.dht22Temperature.DHT22Temperature.setup
libsensorPy.concretesensor.hmc5883l.HMC5883L.setup
libsensorPy.concretesensor.hysrf05.HYSRF05.setup
libsensorPy.concretesensor.lsm303dAccelerometer.LSM303DAccelerometer.setup
libsensorPy.concretesensor.lsm303dMagnetometer.LSM303DMagnetometer.setup
libsensorPy.concretesensor.parallaxPing.ParallaxPing.setup
libsensorPy.concretesensor.pir.PIR.setup
libsensorPy.concretesensor.srf04.SRF04.setup
libsensorPy.concretesensor.srf05.SRF05.setup
libsensorPy.concretesensor.tcs34725.TCS34725.setup
libsensorPy.concretesensor.urm37.URM37.setup
libsensorPy.extension.hcsr04.HCSR04.setup
libsensorPy.setup" class="py-name" href="#" onclick="return doclink('link-69', 'setup', 'link-69');">setup</a></tt><tt class="py-op">(</tt><tt id="link-70" class="py-name"><a title="libsensorPy.concretesensor.adxl345.ADXL345.address" class="py-name" href="#" onclick="return doclink('link-70', 'address', 'link-68');">address</a></tt><tt class="py-op">,</tt> <tt class="py-name">debug</tt><tt class="py-op">,</tt> <tt class="py-name">integrationTime</tt><tt class="py-op">,</tt> <tt class="py-name">gain</tt><tt class="py-op">)</tt> </tt>
</div><a name="L106"></a><tt class="py-lineno">106</tt>  <tt class="py-line"> </tt>
<a name="TCS34725.setup"></a><div id="TCS34725.setup-def"><a name="L107"></a><tt class="py-lineno">107</tt> <a class="py-toggle" href="#" id="TCS34725.setup-toggle" onclick="return toggle('TCS34725.setup');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="libsensorPy.concretesensor.tcs34725.TCS34725-class.php#setup">setup</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">address</tt><tt class="py-op">=</tt><tt class="py-number">0x29</tt><tt class="py-op">,</tt> <tt class="py-param">debug</tt><tt class="py-op">=</tt><tt class="py-name">False</tt><tt class="py-op">,</tt> <tt class="py-param">integrationTime</tt><tt class="py-op">=</tt><tt class="py-number">0xFF</tt><tt class="py-op">,</tt> <tt class="py-param">gain</tt><tt class="py-op">=</tt><tt class="py-number">0x01</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="TCS34725.setup-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="TCS34725.setup-expanded"><a name="L108"></a><tt class="py-lineno">108</tt>  <tt class="py-line">        <tt class="py-docstring">"""        </tt> </tt>
<a name="L109"></a><tt class="py-lineno">109</tt>  <tt class="py-line"><tt class="py-docstring">        @param address: The register's address to be read</tt> </tt>
<a name="L110"></a><tt class="py-lineno">110</tt>  <tt class="py-line"><tt class="py-docstring">        @type address: int16</tt> </tt>
<a name="L111"></a><tt class="py-lineno">111</tt>  <tt class="py-line"><tt class="py-docstring">        @param debug: If debug is enabled</tt> </tt>
<a name="L112"></a><tt class="py-lineno">112</tt>  <tt class="py-line"><tt class="py-docstring">        @type debug: Boolean</tt> </tt>
<a name="L113"></a><tt class="py-lineno">113</tt>  <tt class="py-line"><tt class="py-docstring">        @param integrationTime: Integration time</tt> </tt>
<a name="L114"></a><tt class="py-lineno">114</tt>  <tt class="py-line"><tt class="py-docstring">        @type integrationTime: int16</tt> </tt>
<a name="L115"></a><tt class="py-lineno">115</tt>  <tt class="py-line"><tt class="py-docstring">        @param gain: The sensor's gain </tt> </tt>
<a name="L116"></a><tt class="py-lineno">116</tt>  <tt class="py-line"><tt class="py-docstring">        @type gain: int16</tt> </tt>
<a name="L117"></a><tt class="py-lineno">117</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L118"></a><tt class="py-lineno">118</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">__address</tt> <tt class="py-op">=</tt> <tt id="link-71" class="py-name"><a title="libsensorPy.concretesensor.adxl345.ADXL345.address" class="py-name" href="#" onclick="return doclink('link-71', 'address', 'link-68');">address</a></tt> </tt>
<a name="L119"></a><tt class="py-lineno">119</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">__debug</tt> <tt class="py-op">=</tt> <tt class="py-name">debug</tt> </tt>
<a name="L120"></a><tt class="py-lineno">120</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">__integrationTime</tt> <tt class="py-op">=</tt> <tt class="py-name">integrationTime</tt> </tt>
<a name="L121"></a><tt class="py-lineno">121</tt>  <tt class="py-line">        <tt class="py-name">result</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-72" class="py-name" targets="Method libsensorPy.concretesensor.tcs34725.TCS34725.__readU8()=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__readU8"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__readU8" class="py-name" href="#" onclick="return doclink('link-72', '__readU8', 'link-72');">__readU8</a></tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-73" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__ID" class="py-name" href="#" onclick="return doclink('link-73', '__ID', 'link-42');">__ID</a></tt><tt class="py-op">)</tt> </tt>
<a name="L122"></a><tt class="py-lineno">122</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-op">(</tt><tt class="py-name">result</tt> <tt class="py-op">!=</tt> <tt class="py-number">0x44</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L123"></a><tt class="py-lineno">123</tt>  <tt class="py-line">            <tt class="py-keyword">return</tt> <tt class="py-op">-</tt><tt class="py-number">1</tt> </tt>
<a name="L124"></a><tt class="py-lineno">124</tt>  <tt class="py-line"> </tt>
<a name="L125"></a><tt class="py-lineno">125</tt>  <tt class="py-line">        <tt class="py-comment"># Set default integration time and gain</tt> </tt>
<a name="L126"></a><tt class="py-lineno">126</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-74" class="py-name" targets="Method libsensorPy.concretesensor.tcs34725.TCS34725.__setIntegrationTime()=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__setIntegrationTime"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__setIntegrationTime" class="py-name" href="#" onclick="return doclink('link-74', '__setIntegrationTime', 'link-74');">__setIntegrationTime</a></tt><tt class="py-op">(</tt><tt class="py-name">integrationTime</tt><tt class="py-op">)</tt> </tt>
<a name="L127"></a><tt class="py-lineno">127</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-75" class="py-name" targets="Method libsensorPy.concretesensor.hmc5883l.HMC5883L.__setGain()=libsensorPy.concretesensor.hmc5883l.HMC5883L-class.php#__setGain,Method libsensorPy.concretesensor.tcs34725.TCS34725.__setGain()=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__setGain"><a title="libsensorPy.concretesensor.hmc5883l.HMC5883L.__setGain
libsensorPy.concretesensor.tcs34725.TCS34725.__setGain" class="py-name" href="#" onclick="return doclink('link-75', '__setGain', 'link-75');">__setGain</a></tt><tt class="py-op">(</tt><tt class="py-name">gain</tt><tt class="py-op">)</tt> </tt>
<a name="L128"></a><tt class="py-lineno">128</tt>  <tt class="py-line"> </tt>
<a name="L129"></a><tt class="py-lineno">129</tt>  <tt class="py-line">        <tt class="py-comment"># Note: by default, the device is in power down mode on bootup</tt> </tt>
<a name="L130"></a><tt class="py-lineno">130</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-76" class="py-name" targets="Method libsensorPy.concretesensor.tcs34725.TCS34725.__enable()=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__enable"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__enable" class="py-name" href="#" onclick="return doclink('link-76', '__enable', 'link-76');">__enable</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L131"></a><tt class="py-lineno">131</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-77" class="py-name" targets="Method libsensorPy.concretesensor.tcs34725.TCS34725.__setInterrupt()=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__setInterrupt"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__setInterrupt" class="py-name" href="#" onclick="return doclink('link-77', '__setInterrupt', 'link-77');">__setInterrupt</a></tt><tt class="py-op">(</tt><tt class="py-name">False</tt><tt class="py-op">)</tt> </tt>
<a name="L132"></a><tt class="py-lineno">132</tt>  <tt class="py-line">        <tt class="py-name">time</tt><tt class="py-op">.</tt><tt class="py-name">sleep</tt><tt class="py-op">(</tt><tt class="py-number">1</tt><tt class="py-op">)</tt> </tt>
</div><a name="L133"></a><tt class="py-lineno">133</tt>  <tt class="py-line"> </tt>
<a name="TCS34725.changeSetup"></a><div id="TCS34725.changeSetup-def"><a name="L134"></a><tt class="py-lineno">134</tt> <a class="py-toggle" href="#" id="TCS34725.changeSetup-toggle" onclick="return toggle('TCS34725.changeSetup');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="libsensorPy.concretesensor.tcs34725.TCS34725-class.php#changeSetup">changeSetup</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="TCS34725.changeSetup-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="TCS34725.changeSetup-expanded"><a name="L135"></a><tt class="py-lineno">135</tt>  <tt class="py-line">        <tt class="py-docstring">"""changes GPIO setup ."""</tt> </tt>
<a name="L136"></a><tt class="py-lineno">136</tt>  <tt class="py-line">        <tt class="py-keyword">pass</tt> </tt>
</div><a name="L137"></a><tt class="py-lineno">137</tt>  <tt class="py-line"> </tt>
<a name="TCS34725.__readU8"></a><div id="TCS34725.__readU8-def"><a name="L138"></a><tt class="py-lineno">138</tt> <a class="py-toggle" href="#" id="TCS34725.__readU8-toggle" onclick="return toggle('TCS34725.__readU8');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__readU8">__readU8</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">reg</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="TCS34725.__readU8-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="TCS34725.__readU8-expanded"><a name="L139"></a><tt class="py-lineno">139</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L140"></a><tt class="py-lineno">140</tt>  <tt class="py-line"><tt class="py-docstring">        Read 8bit register </tt> </tt>
<a name="L141"></a><tt class="py-lineno">141</tt>  <tt class="py-line"><tt class="py-docstring">        @param reg: the register to be readed</tt> </tt>
<a name="L142"></a><tt class="py-lineno">142</tt>  <tt class="py-line"><tt class="py-docstring">        @type reg: int16</tt> </tt>
<a name="L143"></a><tt class="py-lineno">143</tt>  <tt class="py-line"><tt class="py-docstring">        @return: The value read from register</tt> </tt>
<a name="L144"></a><tt class="py-lineno">144</tt>  <tt class="py-line"><tt class="py-docstring">        @rtype: int8</tt> </tt>
<a name="L145"></a><tt class="py-lineno">145</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L146"></a><tt class="py-lineno">146</tt>  <tt class="py-line">         </tt>
<a name="L147"></a><tt class="py-lineno">147</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">__i2c</tt><tt class="py-op">.</tt><tt id="link-78" class="py-name" targets="Method libsensorPy.utils.pycomms.PyComms.readU8()=libsensorPy.utils.pycomms.PyComms-class.php#readU8"><a title="libsensorPy.utils.pycomms.PyComms.readU8" class="py-name" href="#" onclick="return doclink('link-78', 'readU8', 'link-78');">readU8</a></tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-79" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__COMMAND_BIT" class="py-name" href="#" onclick="return doclink('link-79', '__COMMAND_BIT', 'link-7');">__COMMAND_BIT</a></tt> <tt class="py-op">|</tt> <tt class="py-name">reg</tt><tt class="py-op">)</tt> </tt>
</div><a name="L148"></a><tt class="py-lineno">148</tt>  <tt class="py-line"> </tt>
<a name="TCS34725.__readU16Rev"></a><div id="TCS34725.__readU16Rev-def"><a name="L149"></a><tt class="py-lineno">149</tt> <a class="py-toggle" href="#" id="TCS34725.__readU16Rev-toggle" onclick="return toggle('TCS34725.__readU16Rev');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__readU16Rev">__readU16Rev</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">reg</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="TCS34725.__readU16Rev-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="TCS34725.__readU16Rev-expanded"><a name="L150"></a><tt class="py-lineno">150</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L151"></a><tt class="py-lineno">151</tt>  <tt class="py-line"><tt class="py-docstring">        Read 16bit register </tt> </tt>
<a name="L152"></a><tt class="py-lineno">152</tt>  <tt class="py-line"><tt class="py-docstring">        @param reg: The register to be readed</tt> </tt>
<a name="L153"></a><tt class="py-lineno">153</tt>  <tt class="py-line"><tt class="py-docstring">        @type reg: int16</tt> </tt>
<a name="L154"></a><tt class="py-lineno">154</tt>  <tt class="py-line"><tt class="py-docstring">        @return: The value read from register</tt> </tt>
<a name="L155"></a><tt class="py-lineno">155</tt>  <tt class="py-line"><tt class="py-docstring">        @rtype: int16</tt> </tt>
<a name="L156"></a><tt class="py-lineno">156</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L157"></a><tt class="py-lineno">157</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">__i2c</tt><tt class="py-op">.</tt><tt id="link-80" class="py-name" targets="Method libsensorPy.utils.pycomms.PyComms.readU16()=libsensorPy.utils.pycomms.PyComms-class.php#readU16"><a title="libsensorPy.utils.pycomms.PyComms.readU16" class="py-name" href="#" onclick="return doclink('link-80', 'readU16', 'link-80');">readU16</a></tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-81" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__COMMAND_BIT" class="py-name" href="#" onclick="return doclink('link-81', '__COMMAND_BIT', 'link-7');">__COMMAND_BIT</a></tt> <tt class="py-op">|</tt> <tt class="py-name">reg</tt><tt class="py-op">)</tt> </tt>
</div><a name="L158"></a><tt class="py-lineno">158</tt>  <tt class="py-line"> </tt>
<a name="TCS34725.__write8"></a><div id="TCS34725.__write8-def"><a name="L159"></a><tt class="py-lineno">159</tt> <a class="py-toggle" href="#" id="TCS34725.__write8-toggle" onclick="return toggle('TCS34725.__write8');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__write8">__write8</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">reg</tt><tt class="py-op">,</tt> <tt class="py-param">value</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="TCS34725.__write8-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="TCS34725.__write8-expanded"><a name="L160"></a><tt class="py-lineno">160</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L161"></a><tt class="py-lineno">161</tt>  <tt class="py-line"><tt class="py-docstring">        </tt> </tt>
<a name="L162"></a><tt class="py-lineno">162</tt>  <tt class="py-line"><tt class="py-docstring">        @param reg: The register to be written</tt> </tt>
<a name="L163"></a><tt class="py-lineno">163</tt>  <tt class="py-line"><tt class="py-docstring">        @type reg: int16</tt> </tt>
<a name="L164"></a><tt class="py-lineno">164</tt>  <tt class="py-line"><tt class="py-docstring">        @param value: The value to write in the register</tt> </tt>
<a name="L165"></a><tt class="py-lineno">165</tt>  <tt class="py-line"><tt class="py-docstring">        @type value: int8</tt> </tt>
<a name="L166"></a><tt class="py-lineno">166</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L167"></a><tt class="py-lineno">167</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">__i2c</tt><tt class="py-op">.</tt><tt id="link-82" class="py-name" targets="Method libsensorPy.utils.pycomms.PyComms.write8()=libsensorPy.utils.pycomms.PyComms-class.php#write8"><a title="libsensorPy.utils.pycomms.PyComms.write8" class="py-name" href="#" onclick="return doclink('link-82', 'write8', 'link-82');">write8</a></tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-83" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__COMMAND_BIT" class="py-name" href="#" onclick="return doclink('link-83', '__COMMAND_BIT', 'link-7');">__COMMAND_BIT</a></tt> <tt class="py-op">|</tt> <tt class="py-name">reg</tt><tt class="py-op">,</tt> <tt class="py-name">value</tt> <tt class="py-op">&amp;</tt> <tt class="py-number">0xff</tt><tt class="py-op">)</tt> </tt>
</div><a name="L168"></a><tt class="py-lineno">168</tt>  <tt class="py-line"> </tt>
<a name="TCS34725.__enable"></a><div id="TCS34725.__enable-def"><a name="L169"></a><tt class="py-lineno">169</tt> <a class="py-toggle" href="#" id="TCS34725.__enable-toggle" onclick="return toggle('TCS34725.__enable');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__enable">__enable</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="TCS34725.__enable-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="TCS34725.__enable-expanded"><a name="L170"></a><tt class="py-lineno">170</tt>  <tt class="py-line">        <tt class="py-docstring">"""Enables the GPIO to be readed."""</tt> </tt>
<a name="L171"></a><tt class="py-lineno">171</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-84" class="py-name" targets="Method libsensorPy.concretesensor.tcs34725.TCS34725.__write8()=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__write8"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__write8" class="py-name" href="#" onclick="return doclink('link-84', '__write8', 'link-84');">__write8</a></tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-85" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__ENABLE" class="py-name" href="#" onclick="return doclink('link-85', '__ENABLE', 'link-8');">__ENABLE</a></tt><tt class="py-op">,</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-86" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__ENABLE_PON" class="py-name" href="#" onclick="return doclink('link-86', '__ENABLE_PON', 'link-12');">__ENABLE_PON</a></tt><tt class="py-op">)</tt> </tt>
<a name="L172"></a><tt class="py-lineno">172</tt>  <tt class="py-line">        <tt class="py-name">time</tt><tt class="py-op">.</tt><tt class="py-name">sleep</tt><tt class="py-op">(</tt><tt class="py-number">0.01</tt><tt class="py-op">)</tt> </tt>
<a name="L173"></a><tt class="py-lineno">173</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-87" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__write8" class="py-name" href="#" onclick="return doclink('link-87', '__write8', 'link-84');">__write8</a></tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-88" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__ENABLE" class="py-name" href="#" onclick="return doclink('link-88', '__ENABLE', 'link-8');">__ENABLE</a></tt><tt class="py-op">,</tt> <tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-89" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__ENABLE_PON" class="py-name" href="#" onclick="return doclink('link-89', '__ENABLE_PON', 'link-12');">__ENABLE_PON</a></tt> <tt class="py-op">|</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-90" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__ENABLE_AEN" class="py-name" href="#" onclick="return doclink('link-90', '__ENABLE_AEN', 'link-11');">__ENABLE_AEN</a></tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
</div><a name="L174"></a><tt class="py-lineno">174</tt>  <tt class="py-line"> </tt>
<a name="TCS34725.disable"></a><div id="TCS34725.disable-def"><a name="L175"></a><tt class="py-lineno">175</tt> <a class="py-toggle" href="#" id="TCS34725.disable-toggle" onclick="return toggle('TCS34725.disable');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="libsensorPy.concretesensor.tcs34725.TCS34725-class.php#disable">disable</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="TCS34725.disable-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="TCS34725.disable-expanded"><a name="L176"></a><tt class="py-lineno">176</tt>  <tt class="py-line">        <tt class="py-docstring">"""Desable the GPIO to be readed."""</tt> </tt>
<a name="L177"></a><tt class="py-lineno">177</tt>  <tt class="py-line">        <tt class="py-name">reg</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-91" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__readU8" class="py-name" href="#" onclick="return doclink('link-91', '__readU8', 'link-72');">__readU8</a></tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-92" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__ENABLE" class="py-name" href="#" onclick="return doclink('link-92', '__ENABLE', 'link-8');">__ENABLE</a></tt><tt class="py-op">)</tt> </tt>
<a name="L178"></a><tt class="py-lineno">178</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-93" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__write8" class="py-name" href="#" onclick="return doclink('link-93', '__write8', 'link-84');">__write8</a></tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-94" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__ENABLE" class="py-name" href="#" onclick="return doclink('link-94', '__ENABLE', 'link-8');">__ENABLE</a></tt><tt class="py-op">,</tt> <tt class="py-op">(</tt><tt class="py-name">reg</tt> <tt class="py-op">&amp;</tt> <tt class="py-op">~</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-95" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__ENABLE_PON" class="py-name" href="#" onclick="return doclink('link-95', '__ENABLE_PON', 'link-12');">__ENABLE_PON</a></tt> <tt class="py-op">|</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-96" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__ENABLE_AEN" class="py-name" href="#" onclick="return doclink('link-96', '__ENABLE_AEN', 'link-11');">__ENABLE_AEN</a></tt><tt class="py-op">)</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
</div><a name="L179"></a><tt class="py-lineno">179</tt>  <tt class="py-line"> </tt>
<a name="TCS34725.__setIntegrationTime"></a><div id="TCS34725.__setIntegrationTime-def"><a name="L180"></a><tt class="py-lineno">180</tt> <a class="py-toggle" href="#" id="TCS34725.__setIntegrationTime-toggle" onclick="return toggle('TCS34725.__setIntegrationTime');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__setIntegrationTime">__setIntegrationTime</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">integrationTime</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="TCS34725.__setIntegrationTime-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="TCS34725.__setIntegrationTime-expanded"><a name="L181"></a><tt class="py-lineno">181</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L182"></a><tt class="py-lineno">182</tt>  <tt class="py-line"><tt class="py-docstring">        Sets the integration time for the TC34725</tt> </tt>
<a name="L183"></a><tt class="py-lineno">183</tt>  <tt class="py-line"><tt class="py-docstring">        @param integrationTime: The integration time</tt> </tt>
<a name="L184"></a><tt class="py-lineno">184</tt>  <tt class="py-line"><tt class="py-docstring">        @type integrationTime: int8</tt> </tt>
<a name="L185"></a><tt class="py-lineno">185</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L186"></a><tt class="py-lineno">186</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">__integrationTime</tt> <tt class="py-op">=</tt> <tt class="py-name">integrationTime</tt> </tt>
<a name="L187"></a><tt class="py-lineno">187</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-97" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__write8" class="py-name" href="#" onclick="return doclink('link-97', '__write8', 'link-84');">__write8</a></tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-98" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__ATIME" class="py-name" href="#" onclick="return doclink('link-98', '__ATIME', 'link-13');">__ATIME</a></tt><tt class="py-op">,</tt> <tt class="py-name">integrationTime</tt><tt class="py-op">)</tt> </tt>
</div><a name="L188"></a><tt class="py-lineno">188</tt>  <tt class="py-line"> </tt>
<a name="TCS34725.__getIntegrationTime"></a><div id="TCS34725.__getIntegrationTime-def"><a name="L189"></a><tt class="py-lineno">189</tt> <a class="py-toggle" href="#" id="TCS34725.__getIntegrationTime-toggle" onclick="return toggle('TCS34725.__getIntegrationTime');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__getIntegrationTime">__getIntegrationTime</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="TCS34725.__getIntegrationTime-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="TCS34725.__getIntegrationTime-expanded"><a name="L190"></a><tt class="py-lineno">190</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L191"></a><tt class="py-lineno">191</tt>  <tt class="py-line"><tt class="py-docstring">        Gets the integration time for the TC34725</tt> </tt>
<a name="L192"></a><tt class="py-lineno">192</tt>  <tt class="py-line"><tt class="py-docstring">        @return: The integration time</tt> </tt>
<a name="L193"></a><tt class="py-lineno">193</tt>  <tt class="py-line"><tt class="py-docstring">        @rtype: int8</tt> </tt>
<a name="L194"></a><tt class="py-lineno">194</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L195"></a><tt class="py-lineno">195</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-99" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__readU8" class="py-name" href="#" onclick="return doclink('link-99', '__readU8', 'link-72');">__readU8</a></tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-100" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__ATIME" class="py-name" href="#" onclick="return doclink('link-100', '__ATIME', 'link-13');">__ATIME</a></tt><tt class="py-op">)</tt> </tt>
</div><a name="L196"></a><tt class="py-lineno">196</tt>  <tt class="py-line"> </tt>
<a name="TCS34725.__setGain"></a><div id="TCS34725.__setGain-def"><a name="L197"></a><tt class="py-lineno">197</tt> <a class="py-toggle" href="#" id="TCS34725.__setGain-toggle" onclick="return toggle('TCS34725.__setGain');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__setGain">__setGain</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">gain</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="TCS34725.__setGain-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="TCS34725.__setGain-expanded"><a name="L198"></a><tt class="py-lineno">198</tt>  <tt class="py-line">        <tt class="py-docstring">"""Adjusts the gain on the TCS34725 (adjusts the sensitivity to light)</tt> </tt>
<a name="L199"></a><tt class="py-lineno">199</tt>  <tt class="py-line"><tt class="py-docstring">        @param gain: The sensor's gain </tt> </tt>
<a name="L200"></a><tt class="py-lineno">200</tt>  <tt class="py-line"><tt class="py-docstring">        @type gain: int16</tt> </tt>
<a name="L201"></a><tt class="py-lineno">201</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L202"></a><tt class="py-lineno">202</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-101" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__write8" class="py-name" href="#" onclick="return doclink('link-101', '__write8', 'link-84');">__write8</a></tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-102" class="py-name"><a title="libsensorPy.concretesensor.bmp085Altitude.BMP085Altitude.__CONTROL
libsensorPy.concretesensor.bmp085Pressure.BMP085Pressure.__CONTROL
libsensorPy.concretesensor.bmp085Temperature.BMP085Temperature.__CONTROL
libsensorPy.concretesensor.tcs34725.TCS34725.__CONTROL" class="py-name" href="#" onclick="return doclink('link-102', '__CONTROL', 'link-41');">__CONTROL</a></tt><tt class="py-op">,</tt> <tt class="py-name">gain</tt><tt class="py-op">)</tt> </tt>
</div><a name="L203"></a><tt class="py-lineno">203</tt>  <tt class="py-line"> </tt>
<a name="TCS34725.__getGain"></a><div id="TCS34725.__getGain-def"><a name="L204"></a><tt class="py-lineno">204</tt> <a class="py-toggle" href="#" id="TCS34725.__getGain-toggle" onclick="return toggle('TCS34725.__getGain');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__getGain">__getGain</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="TCS34725.__getGain-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="TCS34725.__getGain-expanded"><a name="L205"></a><tt class="py-lineno">205</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L206"></a><tt class="py-lineno">206</tt>  <tt class="py-line"><tt class="py-docstring">        Gets the he gain on the TCS34725</tt> </tt>
<a name="L207"></a><tt class="py-lineno">207</tt>  <tt class="py-line"><tt class="py-docstring">        @return: The sensor's gain </tt> </tt>
<a name="L208"></a><tt class="py-lineno">208</tt>  <tt class="py-line"><tt class="py-docstring">        @rtype: int16</tt> </tt>
<a name="L209"></a><tt class="py-lineno">209</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L210"></a><tt class="py-lineno">210</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-103" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__readU8" class="py-name" href="#" onclick="return doclink('link-103', '__readU8', 'link-72');">__readU8</a></tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-104" class="py-name"><a title="libsensorPy.concretesensor.bmp085Altitude.BMP085Altitude.__CONTROL
libsensorPy.concretesensor.bmp085Pressure.BMP085Pressure.__CONTROL
libsensorPy.concretesensor.bmp085Temperature.BMP085Temperature.__CONTROL
libsensorPy.concretesensor.tcs34725.TCS34725.__CONTROL" class="py-name" href="#" onclick="return doclink('link-104', '__CONTROL', 'link-41');">__CONTROL</a></tt><tt class="py-op">)</tt> </tt>
</div><a name="L211"></a><tt class="py-lineno">211</tt>  <tt class="py-line"> </tt>
<a name="TCS34725.__getRawData"></a><div id="TCS34725.__getRawData-def"><a name="L212"></a><tt class="py-lineno">212</tt> <a class="py-toggle" href="#" id="TCS34725.__getRawData-toggle" onclick="return toggle('TCS34725.__getRawData');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__getRawData">__getRawData</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="TCS34725.__getRawData-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="TCS34725.__getRawData-expanded"><a name="L213"></a><tt class="py-lineno">213</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L214"></a><tt class="py-lineno">214</tt>  <tt class="py-line"><tt class="py-docstring">        Reads the raw red, green, blue and clear channel values</tt> </tt>
<a name="L215"></a><tt class="py-lineno">215</tt>  <tt class="py-line"><tt class="py-docstring">        @return: The sensor's raw data </tt> </tt>
<a name="L216"></a><tt class="py-lineno">216</tt>  <tt class="py-line"><tt class="py-docstring">        @rtype: float{}</tt> </tt>
<a name="L217"></a><tt class="py-lineno">217</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L218"></a><tt class="py-lineno">218</tt>  <tt class="py-line"> </tt>
<a name="L219"></a><tt class="py-lineno">219</tt>  <tt class="py-line">        <tt class="py-name">color</tt> <tt class="py-op">=</tt> <tt class="py-op">{</tt><tt class="py-op">}</tt> </tt>
<a name="L220"></a><tt class="py-lineno">220</tt>  <tt class="py-line"> </tt>
<a name="L221"></a><tt class="py-lineno">221</tt>  <tt class="py-line">        <tt class="py-name">color</tt><tt class="py-op">[</tt><tt class="py-string">"r"</tt><tt class="py-op">]</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-105" class="py-name" targets="Method libsensorPy.concretesensor.tcs34725.TCS34725.__readU16Rev()=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__readU16Rev"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__readU16Rev" class="py-name" href="#" onclick="return doclink('link-105', '__readU16Rev', 'link-105');">__readU16Rev</a></tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-106" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__RDATAL" class="py-name" href="#" onclick="return doclink('link-106', '__RDATAL', 'link-48');">__RDATAL</a></tt><tt class="py-op">)</tt> </tt>
<a name="L222"></a><tt class="py-lineno">222</tt>  <tt class="py-line">        <tt class="py-name">color</tt><tt class="py-op">[</tt><tt class="py-string">"b"</tt><tt class="py-op">]</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-107" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__readU16Rev" class="py-name" href="#" onclick="return doclink('link-107', '__readU16Rev', 'link-105');">__readU16Rev</a></tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-108" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__BDATAL" class="py-name" href="#" onclick="return doclink('link-108', '__BDATAL', 'link-52');">__BDATAL</a></tt><tt class="py-op">)</tt> </tt>
<a name="L223"></a><tt class="py-lineno">223</tt>  <tt class="py-line">        <tt class="py-name">color</tt><tt class="py-op">[</tt><tt class="py-string">"g"</tt><tt class="py-op">]</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-109" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__readU16Rev" class="py-name" href="#" onclick="return doclink('link-109', '__readU16Rev', 'link-105');">__readU16Rev</a></tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-110" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__GDATAL" class="py-name" href="#" onclick="return doclink('link-110', '__GDATAL', 'link-50');">__GDATAL</a></tt><tt class="py-op">)</tt> </tt>
<a name="L224"></a><tt class="py-lineno">224</tt>  <tt class="py-line">        <tt class="py-name">color</tt><tt class="py-op">[</tt><tt class="py-string">"c"</tt><tt class="py-op">]</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-111" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__readU16Rev" class="py-name" href="#" onclick="return doclink('link-111', '__readU16Rev', 'link-105');">__readU16Rev</a></tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-112" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__CDATAL" class="py-name" href="#" onclick="return doclink('link-112', '__CDATAL', 'link-46');">__CDATAL</a></tt><tt class="py-op">)</tt> </tt>
<a name="L225"></a><tt class="py-lineno">225</tt>  <tt class="py-line"> </tt>
<a name="L226"></a><tt class="py-lineno">226</tt>  <tt class="py-line">        <tt class="py-comment"># Set a delay for the integration time</tt> </tt>
<a name="L227"></a><tt class="py-lineno">227</tt>  <tt class="py-line">        <tt class="py-name">delay</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-113" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__integrationTimeDelay" class="py-name" href="#" onclick="return doclink('link-113', '__integrationTimeDelay', 'link-64');">__integrationTimeDelay</a></tt><tt class="py-op">.</tt><tt class="py-name">get</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">__integrationTime</tt><tt class="py-op">)</tt> </tt>
<a name="L228"></a><tt class="py-lineno">228</tt>  <tt class="py-line">        <tt class="py-name">time</tt><tt class="py-op">.</tt><tt class="py-name">sleep</tt><tt class="py-op">(</tt><tt class="py-name">delay</tt><tt class="py-op">)</tt> </tt>
<a name="L229"></a><tt class="py-lineno">229</tt>  <tt class="py-line"> </tt>
<a name="L230"></a><tt class="py-lineno">230</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">color</tt> </tt>
</div><a name="L231"></a><tt class="py-lineno">231</tt>  <tt class="py-line"> </tt>
<a name="TCS34725.__setInterrupt"></a><div id="TCS34725.__setInterrupt-def"><a name="L232"></a><tt class="py-lineno">232</tt> <a class="py-toggle" href="#" id="TCS34725.__setInterrupt-toggle" onclick="return toggle('TCS34725.__setInterrupt');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__setInterrupt">__setInterrupt</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">int</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="TCS34725.__setInterrupt-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="TCS34725.__setInterrupt-expanded"><a name="L233"></a><tt class="py-lineno">233</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L234"></a><tt class="py-lineno">234</tt>  <tt class="py-line"><tt class="py-docstring">        Interrupt data read</tt> </tt>
<a name="L235"></a><tt class="py-lineno">235</tt>  <tt class="py-line"><tt class="py-docstring">        @param int: Value to interrupt </tt> </tt>
<a name="L236"></a><tt class="py-lineno">236</tt>  <tt class="py-line"><tt class="py-docstring">        @type int: int8</tt> </tt>
<a name="L237"></a><tt class="py-lineno">237</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L238"></a><tt class="py-lineno">238</tt>  <tt class="py-line">        <tt class="py-name">r</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-114" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__readU8" class="py-name" href="#" onclick="return doclink('link-114', '__readU8', 'link-72');">__readU8</a></tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-115" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__ENABLE" class="py-name" href="#" onclick="return doclink('link-115', '__ENABLE', 'link-8');">__ENABLE</a></tt><tt class="py-op">)</tt> </tt>
<a name="L239"></a><tt class="py-lineno">239</tt>  <tt class="py-line"> </tt>
<a name="L240"></a><tt class="py-lineno">240</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-op">(</tt><tt class="py-name">int</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L241"></a><tt class="py-lineno">241</tt>  <tt class="py-line">            <tt class="py-name">r</tt> <tt class="py-op">|=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-116" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__ENABLE_AIEN" class="py-name" href="#" onclick="return doclink('link-116', '__ENABLE_AIEN', 'link-9');">__ENABLE_AIEN</a></tt> </tt>
<a name="L242"></a><tt class="py-lineno">242</tt>  <tt class="py-line">        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L243"></a><tt class="py-lineno">243</tt>  <tt class="py-line">            <tt class="py-name">r</tt> <tt class="py-op">&amp;=</tt> <tt class="py-op">~</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-117" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__ENABLE_AIEN" class="py-name" href="#" onclick="return doclink('link-117', '__ENABLE_AIEN', 'link-9');">__ENABLE_AIEN</a></tt> </tt>
<a name="L244"></a><tt class="py-lineno">244</tt>  <tt class="py-line"> </tt>
<a name="L245"></a><tt class="py-lineno">245</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-118" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__write8" class="py-name" href="#" onclick="return doclink('link-118', '__write8', 'link-84');">__write8</a></tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-119" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__ENABLE" class="py-name" href="#" onclick="return doclink('link-119', '__ENABLE', 'link-8');">__ENABLE</a></tt><tt class="py-op">,</tt> <tt class="py-name">r</tt><tt class="py-op">)</tt> </tt>
</div><a name="L246"></a><tt class="py-lineno">246</tt>  <tt class="py-line"> </tt>
<a name="TCS34725.clearInterrupt"></a><div id="TCS34725.clearInterrupt-def"><a name="L247"></a><tt class="py-lineno">247</tt> <a class="py-toggle" href="#" id="TCS34725.clearInterrupt-toggle" onclick="return toggle('TCS34725.clearInterrupt');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="libsensorPy.concretesensor.tcs34725.TCS34725-class.php#clearInterrupt">clearInterrupt</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="TCS34725.clearInterrupt-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="TCS34725.clearInterrupt-expanded"><a name="L248"></a><tt class="py-lineno">248</tt>  <tt class="py-line">        <tt class="py-docstring">"""Removes the interrupt action"""</tt> </tt>
<a name="L249"></a><tt class="py-lineno">249</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">__i2c</tt><tt class="py-op">.</tt><tt id="link-120" class="py-name"><a title="libsensorPy.utils.pycomms.PyComms.write8" class="py-name" href="#" onclick="return doclink('link-120', 'write8', 'link-82');">write8</a></tt><tt class="py-op">(</tt><tt class="py-number">0x66</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt> <tt class="py-op">&amp;</tt> <tt class="py-number">0xff</tt><tt class="py-op">)</tt> </tt>
</div><a name="L250"></a><tt class="py-lineno">250</tt>  <tt class="py-line"> </tt>
<a name="TCS34725.setIntLimits"></a><div id="TCS34725.setIntLimits-def"><a name="L251"></a><tt class="py-lineno">251</tt> <a class="py-toggle" href="#" id="TCS34725.setIntLimits-toggle" onclick="return toggle('TCS34725.setIntLimits');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="libsensorPy.concretesensor.tcs34725.TCS34725-class.php#setIntLimits">setIntLimits</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">low</tt><tt class="py-op">,</tt> <tt class="py-param">high</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="TCS34725.setIntLimits-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="TCS34725.setIntLimits-expanded"><a name="L252"></a><tt class="py-lineno">252</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L253"></a><tt class="py-lineno">253</tt>  <tt class="py-line"><tt class="py-docstring">        Set value limits</tt> </tt>
<a name="L254"></a><tt class="py-lineno">254</tt>  <tt class="py-line"><tt class="py-docstring">        @param low: Low value</tt> </tt>
<a name="L255"></a><tt class="py-lineno">255</tt>  <tt class="py-line"><tt class="py-docstring">        @type low: int8</tt> </tt>
<a name="L256"></a><tt class="py-lineno">256</tt>  <tt class="py-line"><tt class="py-docstring">        @param high: High value</tt> </tt>
<a name="L257"></a><tt class="py-lineno">257</tt>  <tt class="py-line"><tt class="py-docstring">        @type high: int8</tt> </tt>
<a name="L258"></a><tt class="py-lineno">258</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L259"></a><tt class="py-lineno">259</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">__i2c</tt><tt class="py-op">.</tt><tt id="link-121" class="py-name"><a title="libsensorPy.utils.pycomms.PyComms.write8" class="py-name" href="#" onclick="return doclink('link-121', 'write8', 'link-82');">write8</a></tt><tt class="py-op">(</tt><tt class="py-number">0x04</tt><tt class="py-op">,</tt> <tt class="py-name">low</tt> <tt class="py-op">&amp;</tt> <tt class="py-number">0xFF</tt><tt class="py-op">)</tt> </tt>
<a name="L260"></a><tt class="py-lineno">260</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">__i2c</tt><tt class="py-op">.</tt><tt id="link-122" class="py-name"><a title="libsensorPy.utils.pycomms.PyComms.write8" class="py-name" href="#" onclick="return doclink('link-122', 'write8', 'link-82');">write8</a></tt><tt class="py-op">(</tt><tt class="py-number">0x05</tt><tt class="py-op">,</tt> <tt class="py-name">low</tt> <tt class="py-op">&gt;&gt;</tt> <tt class="py-number">8</tt><tt class="py-op">)</tt> </tt>
<a name="L261"></a><tt class="py-lineno">261</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">__i2c</tt><tt class="py-op">.</tt><tt id="link-123" class="py-name"><a title="libsensorPy.utils.pycomms.PyComms.write8" class="py-name" href="#" onclick="return doclink('link-123', 'write8', 'link-82');">write8</a></tt><tt class="py-op">(</tt><tt class="py-number">0x06</tt><tt class="py-op">,</tt> <tt class="py-name">high</tt> <tt class="py-op">&amp;</tt> <tt class="py-number">0xFF</tt><tt class="py-op">)</tt> </tt>
<a name="L262"></a><tt class="py-lineno">262</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">__i2c</tt><tt class="py-op">.</tt><tt id="link-124" class="py-name"><a title="libsensorPy.utils.pycomms.PyComms.write8" class="py-name" href="#" onclick="return doclink('link-124', 'write8', 'link-82');">write8</a></tt><tt class="py-op">(</tt><tt class="py-number">0x07</tt><tt class="py-op">,</tt> <tt class="py-name">high</tt> <tt class="py-op">&gt;&gt;</tt> <tt class="py-number">8</tt><tt class="py-op">)</tt> </tt>
</div><a name="L263"></a><tt class="py-lineno">263</tt>  <tt class="py-line"> </tt>
<a name="TCS34725.calculateColorTemperature"></a><div id="TCS34725.calculateColorTemperature-def"><a name="L264"></a><tt class="py-lineno">264</tt> <a class="py-toggle" href="#" id="TCS34725.calculateColorTemperature-toggle" onclick="return toggle('TCS34725.calculateColorTemperature');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="libsensorPy.concretesensor.tcs34725.TCS34725-class.php#calculateColorTemperature">calculateColorTemperature</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="TCS34725.calculateColorTemperature-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="TCS34725.calculateColorTemperature-expanded"><a name="L265"></a><tt class="py-lineno">265</tt>  <tt class="py-line">        <tt class="py-docstring">"""Converts the raw R/G/B values to color temperature in degrees Kelvin</tt> </tt>
<a name="L266"></a><tt class="py-lineno">266</tt>  <tt class="py-line"><tt class="py-docstring">        @return: The color's temperature </tt> </tt>
<a name="L267"></a><tt class="py-lineno">267</tt>  <tt class="py-line"><tt class="py-docstring">        @rtype: float</tt> </tt>
<a name="L268"></a><tt class="py-lineno">268</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L269"></a><tt class="py-lineno">269</tt>  <tt class="py-line">        <tt class="py-name">rgb</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-125" class="py-name" targets="Method libsensorPy.concretesensor.tcs34725.TCS34725.__getRawData()=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__getRawData"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__getRawData" class="py-name" href="#" onclick="return doclink('link-125', '__getRawData', 'link-125');">__getRawData</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L270"></a><tt class="py-lineno">270</tt>  <tt class="py-line"> </tt>
<a name="L271"></a><tt class="py-lineno">271</tt>  <tt class="py-line">        <tt class="py-name">X</tt> <tt class="py-op">=</tt> <tt class="py-op">(</tt><tt class="py-op">-</tt><tt class="py-number">0.14282</tt> <tt class="py-op">*</tt> <tt class="py-name">rgb</tt><tt class="py-op">[</tt><tt class="py-string">'r'</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> <tt class="py-op">+</tt> <tt class="py-op">(</tt><tt class="py-number">1.54924</tt> <tt class="py-op">*</tt> <tt class="py-name">rgb</tt><tt class="py-op">[</tt><tt class="py-string">'g'</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> <tt class="py-op">+</tt> <tt class="py-op">(</tt><tt class="py-op">-</tt><tt class="py-number">0.95641</tt> <tt class="py-op">*</tt> <tt class="py-name">rgb</tt><tt class="py-op">[</tt><tt class="py-string">'b'</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> </tt>
<a name="L272"></a><tt class="py-lineno">272</tt>  <tt class="py-line">        <tt class="py-name">Y</tt> <tt class="py-op">=</tt> <tt class="py-op">(</tt><tt class="py-op">-</tt><tt class="py-number">0.32466</tt> <tt class="py-op">*</tt> <tt class="py-name">rgb</tt><tt class="py-op">[</tt><tt class="py-string">'r'</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> <tt class="py-op">+</tt> <tt class="py-op">(</tt><tt class="py-number">1.57837</tt> <tt class="py-op">*</tt> <tt class="py-name">rgb</tt><tt class="py-op">[</tt><tt class="py-string">'g'</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> <tt class="py-op">+</tt> <tt class="py-op">(</tt><tt class="py-op">-</tt><tt class="py-number">0.73191</tt> <tt class="py-op">*</tt> <tt class="py-name">rgb</tt><tt class="py-op">[</tt><tt class="py-string">'b'</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> </tt>
<a name="L273"></a><tt class="py-lineno">273</tt>  <tt class="py-line">        <tt class="py-name">Z</tt> <tt class="py-op">=</tt> <tt class="py-op">(</tt><tt class="py-op">-</tt><tt class="py-number">0.68202</tt> <tt class="py-op">*</tt> <tt class="py-name">rgb</tt><tt class="py-op">[</tt><tt class="py-string">'r'</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> <tt class="py-op">+</tt> <tt class="py-op">(</tt><tt class="py-number">0.77073</tt> <tt class="py-op">*</tt> <tt class="py-name">rgb</tt><tt class="py-op">[</tt><tt class="py-string">'g'</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> <tt class="py-op">+</tt> <tt class="py-op">(</tt> <tt class="py-number">0.56332</tt> <tt class="py-op">*</tt> <tt class="py-name">rgb</tt><tt class="py-op">[</tt><tt class="py-string">'b'</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> </tt>
<a name="L274"></a><tt class="py-lineno">274</tt>  <tt class="py-line"> </tt>
<a name="L275"></a><tt class="py-lineno">275</tt>  <tt class="py-line">        <tt class="py-comment"># Check for divide by 0 (total darkness) and return None.</tt> </tt>
<a name="L276"></a><tt class="py-lineno">276</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-op">(</tt><tt class="py-name">X</tt> <tt class="py-op">+</tt> <tt class="py-name">Y</tt> <tt class="py-op">+</tt> <tt class="py-name">Z</tt><tt class="py-op">)</tt> <tt class="py-op">==</tt> <tt class="py-number">0</tt><tt class="py-op">:</tt> </tt>
<a name="L277"></a><tt class="py-lineno">277</tt>  <tt class="py-line">            <tt class="py-keyword">return</tt> <tt class="py-name">None</tt> </tt>
<a name="L278"></a><tt class="py-lineno">278</tt>  <tt class="py-line"> </tt>
<a name="L279"></a><tt class="py-lineno">279</tt>  <tt class="py-line">        <tt class="py-name">xc</tt> <tt class="py-op">=</tt> <tt class="py-op">(</tt><tt class="py-name">X</tt><tt class="py-op">)</tt> <tt class="py-op">/</tt> <tt class="py-op">(</tt><tt class="py-name">X</tt> <tt class="py-op">+</tt> <tt class="py-name">Y</tt> <tt class="py-op">+</tt> <tt class="py-name">Z</tt><tt class="py-op">)</tt> </tt>
<a name="L280"></a><tt class="py-lineno">280</tt>  <tt class="py-line">        <tt class="py-name">yc</tt> <tt class="py-op">=</tt> <tt class="py-op">(</tt><tt class="py-name">Y</tt><tt class="py-op">)</tt> <tt class="py-op">/</tt> <tt class="py-op">(</tt><tt class="py-name">X</tt> <tt class="py-op">+</tt> <tt class="py-name">Y</tt> <tt class="py-op">+</tt> <tt class="py-name">Z</tt><tt class="py-op">)</tt> </tt>
<a name="L281"></a><tt class="py-lineno">281</tt>  <tt class="py-line"> </tt>
<a name="L282"></a><tt class="py-lineno">282</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-op">(</tt><tt class="py-number">0.1858</tt> <tt class="py-op">-</tt> <tt class="py-name">yc</tt><tt class="py-op">)</tt> <tt class="py-op">==</tt> <tt class="py-number">0</tt><tt class="py-op">:</tt> </tt>
<a name="L283"></a><tt class="py-lineno">283</tt>  <tt class="py-line">            <tt class="py-keyword">return</tt> <tt class="py-name">None</tt> </tt>
<a name="L284"></a><tt class="py-lineno">284</tt>  <tt class="py-line"> </tt>
<a name="L285"></a><tt class="py-lineno">285</tt>  <tt class="py-line">        <tt class="py-comment"># 3. Use McCamy's formula to determine the CCT</tt> </tt>
<a name="L286"></a><tt class="py-lineno">286</tt>  <tt class="py-line">        <tt class="py-name">n</tt> <tt class="py-op">=</tt> <tt class="py-op">(</tt><tt class="py-name">xc</tt> <tt class="py-op">-</tt> <tt class="py-number">0.3320</tt><tt class="py-op">)</tt> <tt class="py-op">/</tt> <tt class="py-op">(</tt><tt class="py-number">0.1858</tt> <tt class="py-op">-</tt> <tt class="py-name">yc</tt><tt class="py-op">)</tt> </tt>
<a name="L287"></a><tt class="py-lineno">287</tt>  <tt class="py-line"> </tt>
<a name="L288"></a><tt class="py-lineno">288</tt>  <tt class="py-line">        <tt class="py-comment"># Calculate the final CCT</tt> </tt>
<a name="L289"></a><tt class="py-lineno">289</tt>  <tt class="py-line">        <tt class="py-name">cct</tt> <tt class="py-op">=</tt> <tt class="py-op">(</tt><tt class="py-number">449.0</tt> <tt class="py-op">*</tt> <tt class="py-op">(</tt><tt class="py-name">n</tt> <tt class="py-op">**</tt> <tt class="py-number">3.0</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> <tt class="py-op">+</tt> <tt class="py-op">(</tt><tt class="py-number">3525.0</tt> <tt class="py-op">*</tt><tt class="py-op">(</tt><tt class="py-name">n</tt> <tt class="py-op">**</tt> <tt class="py-number">2.0</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> <tt class="py-op">+</tt> <tt class="py-op">(</tt><tt class="py-number">6823.3</tt> <tt class="py-op">*</tt> <tt class="py-name">n</tt><tt class="py-op">)</tt> <tt class="py-op">+</tt> <tt class="py-number">5520.33</tt> </tt>
<a name="L290"></a><tt class="py-lineno">290</tt>  <tt class="py-line"> </tt>
<a name="L291"></a><tt class="py-lineno">291</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-op">(</tt><tt class="py-name">float</tt><tt class="py-op">(</tt><tt class="py-name">cct</tt><tt class="py-op">)</tt> <tt class="py-op">-</tt> <tt class="py-number">273.15</tt><tt class="py-op">)</tt> </tt>
</div><a name="L292"></a><tt class="py-lineno">292</tt>  <tt class="py-line"> </tt>
<a name="TCS34725.calculateLux"></a><div id="TCS34725.calculateLux-def"><a name="L293"></a><tt class="py-lineno">293</tt> <a class="py-toggle" href="#" id="TCS34725.calculateLux-toggle" onclick="return toggle('TCS34725.calculateLux');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="libsensorPy.concretesensor.tcs34725.TCS34725-class.php#calculateLux">calculateLux</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="TCS34725.calculateLux-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="TCS34725.calculateLux-expanded"><a name="L294"></a><tt class="py-lineno">294</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L295"></a><tt class="py-lineno">295</tt>  <tt class="py-line"><tt class="py-docstring">        Calculate Lux value</tt> </tt>
<a name="L296"></a><tt class="py-lineno">296</tt>  <tt class="py-line"><tt class="py-docstring">        @return: The Lux value </tt> </tt>
<a name="L297"></a><tt class="py-lineno">297</tt>  <tt class="py-line"><tt class="py-docstring">        @rtype: long</tt> </tt>
<a name="L298"></a><tt class="py-lineno">298</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L299"></a><tt class="py-lineno">299</tt>  <tt class="py-line">        <tt class="py-name">rgb</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-126" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__getRawData" class="py-name" href="#" onclick="return doclink('link-126', '__getRawData', 'link-125');">__getRawData</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L300"></a><tt class="py-lineno">300</tt>  <tt class="py-line"> </tt>
<a name="L301"></a><tt class="py-lineno">301</tt>  <tt class="py-line">        <tt class="py-name">illuminance</tt> <tt class="py-op">=</tt> <tt class="py-op">(</tt><tt class="py-op">-</tt><tt class="py-number">0.32466</tt> <tt class="py-op">*</tt> <tt class="py-name">rgb</tt><tt class="py-op">[</tt><tt class="py-string">'r'</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> <tt class="py-op">+</tt> <tt class="py-op">(</tt><tt class="py-number">1.57837</tt> <tt class="py-op">*</tt> <tt class="py-name">rgb</tt><tt class="py-op">[</tt><tt class="py-string">'g'</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> <tt class="py-op">+</tt> <tt class="py-op">(</tt><tt class="py-op">-</tt><tt class="py-number">0.73191</tt> <tt class="py-op">*</tt> <tt class="py-name">rgb</tt><tt class="py-op">[</tt><tt class="py-string">'b'</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> </tt>
<a name="L302"></a><tt class="py-lineno">302</tt>  <tt class="py-line"> </tt>
<a name="L303"></a><tt class="py-lineno">303</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">long</tt><tt class="py-op">(</tt><tt class="py-name">illuminance</tt><tt class="py-op">)</tt> </tt>
</div><a name="L304"></a><tt class="py-lineno">304</tt>  <tt class="py-line"> </tt>
<a name="TCS34725.__del__"></a><div id="TCS34725.__del__-def"><a name="L305"></a><tt class="py-lineno">305</tt> <a class="py-toggle" href="#" id="TCS34725.__del__-toggle" onclick="return toggle('TCS34725.__del__');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__del__">__del__</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="TCS34725.__del__-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="TCS34725.__del__-expanded"><a name="L306"></a><tt class="py-lineno">306</tt>  <tt class="py-line">        <tt class="py-docstring">""" we're no longer using the GPIO, so tell software we're done"""</tt> </tt>
<a name="L307"></a><tt class="py-lineno">307</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-127" class="py-name"><a title="libsensorPy.concretesensor.tcs34725.TCS34725.__setInterrupt" class="py-name" href="#" onclick="return doclink('link-127', '__setInterrupt', 'link-77');">__setInterrupt</a></tt><tt class="py-op">(</tt><tt class="py-name">True</tt><tt class="py-op">)</tt> </tt>
<a name="L308"></a><tt class="py-lineno">308</tt>  <tt class="py-line">        <tt class="py-name">time</tt><tt class="py-op">.</tt><tt class="py-name">sleep</tt><tt class="py-op">(</tt><tt class="py-number">1</tt><tt class="py-op">)</tt> </tt>
<a name="L309"></a><tt class="py-lineno">309</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">__disable</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L310"></a><tt class="py-lineno">310</tt>  <tt class="py-line">        <tt id="link-128" class="py-name"><a title="libsensorPy.abstractclass.lightSensor.LightSensor" class="py-name" href="#" onclick="return doclink('link-128', 'LightSensor', 'link-5');">LightSensor</a></tt><tt class="py-op">.</tt><tt id="link-129" class="py-name" targets="Method libsensorPy.abstractclass.actuator.Actuator.__del__()=libsensorPy.abstractclass.actuator.Actuator-class.php#__del__,Method libsensorPy.abstractclass.sensor.Sensor.__del__()=libsensorPy.abstractclass.sensor.Sensor-class.php#__del__,Method libsensorPy.concretesensor.tcs34725.TCS34725.__del__()=libsensorPy.concretesensor.tcs34725.TCS34725-class.php#__del__"><a title="libsensorPy.abstractclass.actuator.Actuator.__del__
libsensorPy.abstractclass.sensor.Sensor.__del__
libsensorPy.concretesensor.tcs34725.TCS34725.__del__" class="py-name" href="#" onclick="return doclink('link-129', '__del__', 'link-129');">__del__</a></tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">)</tt> </tt>
</div></div><a name="L311"></a><tt class="py-lineno">311</tt>  <tt class="py-line"> </tt><script type="text/javascript">
<!--
expandto(location.href);
// -->
</script>
</pre>
<br />
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">
  <!-- Home link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="libsensorPy-module.php">Home</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.php">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.php">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.php">Help</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Project homepage -->
      <th class="navbar" align="right" width="100%">
        <table border="0" cellpadding="0" cellspacing="0">
          <tr><th class="navbar" align="center"
            >libsensorPy</th>
          </tr></table></th>
  </tr>
</table>
<table border="0" cellpadding="0" cellspacing="0" width="100%%">
  <tr>
    <td align="left" class="footer">
    Generated by Epydoc 3.0.1 on Mon Apr 13 18:16:29 2015
    </td>
    <td align="right" class="footer">
      <a target="mainFrame" href="http://epydoc.sourceforge.net"
        >http://epydoc.sourceforge.net</a>
    </td>
  </tr>
</table>

<script type="text/javascript">
  <!--
  // Private objects are initially displayed (because if
  // javascript is turned off then we want them to be
  // visible); but by default, we want to hide them.  So hide
  // them unless we have a cookie that says to show them.
  checkCookie();
  // -->
</script>
</body>
</html>
